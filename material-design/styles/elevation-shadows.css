@import "../../global/styles/applications/calculator.css";
@import "../../global/styles/applications/calendar.css";
@import "../../global/styles/applications/contacts.css";

/*------------------------------------*\
  正文
\*------------------------------------*/
#elevation table,
#absolute-elevation,
#relative-elevation,
#relative-static {
    grid-column-end: span min(var(--content-columns), 2);
}

#without-shadow,
#motion-without-shadow {
    grid-column-start: 1;
}

:is(#motion-without-shadow, #motion-different-shadow, #motion-same-shadow) .diagram {
    aspect-ratio: 1/1;
}

:is(#absolute-elevation, #relative-elevation) .illustration {
    block-size: 480px;
    padding: 0 20px;
    align-items: unset;
    background-color: var(--diagram-background-color);
}

:is(#absolute-elevation, #relative-elevation) .wrapper {
    flex-basis: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 24px;
}

#absolute-elevation .surface {
    position: relative;
    inline-size: 200px;
    block-size: 150px;
    border-radius: 2px;
    background-color: var(--high-emphasis-surface-color);
}

#absolute-elevation .surface:first-child {
    box-shadow: var(--shadow-z8);
}

#absolute-elevation .surface:last-child {
    box-shadow: var(--shadow-z2);
}

:is(#absolute-elevation, #relative-elevation) picture {
    flex-basis: 100%;
}

#relative-elevation .wrapper>.surface {
    position: relative;
    inline-size: 250px;
    block-size: 324px;
    border-radius: 2px;
    display: flex;
    flex-direction: column-reverse;
    align-items: end;
    background-color: var(--medium-emphasis-surface-color);
    box-shadow: var(--shadow-z16);
}

#relative-elevation .wrapper>.surface>.surface {
    position: relative;
    inline-size: 80px;
    block-size: 36px;
    border-radius: 2px;
    margin: 16px;
    background-color: #2196f3;
    box-shadow: var(--shadow-z2);
}

:is(#without-shadow, #similar-shadow, #distinguishable-shadow) .diagram {
    block-size: 240px;
    align-items: start;
    background-color: var(--grey-300);
}

:is(#without-shadow, #similar-shadow, #distinguishable-shadow) .surface:nth-child(1) {
    flex-grow: 1;
    position: relative;
    block-size: 168px;
    background-color: var(--low-emphasis-surface-color);
}

:is(#without-shadow, #similar-shadow, #distinguishable-shadow) .surface:nth-child(2) {
    inset-block-start: 140px;
    inset-inline-end: 16px;
    position: absolute;
    inline-size: 56px;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    background-color: var(--high-emphasis-surface-color);
}

#similar-shadow .surface,
#distinguishable-shadow .surface:nth-child(1) {
    box-shadow: var(--shadow-z2);
}

#distinguishable-shadow .surface:nth-child(2) {
    box-shadow: var(--shadow-z6);
}

:is(#motion-without-shadow, #motion-different-shadow, #motion-same-shadow) .surface {
    position: relative;
    inline-size: 125px;
    aspect-ratio: 1/1;
    border-radius: 2px;
    background-color: var(--high-emphasis-surface-color);
}

:is(#motion-different-shadow, #motion-same-shadow) .surface {
    box-shadow: var(--shadow-z2);
}

:is(#motion-without-shadow, #motion-different-shadow, #motion-same-shadow) [play="on"] {
    animation-duration: 4s;
}

:is(#motion-without-shadow, #motion-different-shadow, #motion-same-shadow) .surface {
    animation-duration: 750ms;
    animation-delay: 0.5s, 2.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

:is(#motion-without-shadow, #motion-same-shadow) [play="on"] .surface {
    animation-name: surfaceExpand, surfaceShrink;
}

#motion-different-shadow [play="on"] .surface {
    animation-name: surfaceLift, surfaceDrop;
}

@keyframes surfaceExpand {
    100% {
        inline-size: 150px;
    }
}

@keyframes surfaceShrink {
    100% {
        inline-size: 125px;
    }
}

@keyframes surfaceLift {
    100% {
        inline-size: 150px;
        box-shadow: var(--shadow-z12);
    }
}

@keyframes surfaceDrop {
    100% {
        inline-size: 125px;
        box-shadow: var(--shadow-z2);
    }
}

#color-overlap .clear-ripple {
    justify-self: start;
    inset-inline-end: 60px;
    inset-block-start: 273px;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
}

#color-overlap .clear-ripple::before {
    content: "";
    position: absolute;
    inline-size: calc(405.6217px * 2);
    aspect-ratio: 1 / 1;
    background-color: var(--primary-color);
    border-radius: 50%;
    scale: 0;
}

#color-overlap .overlay .clear-ripple::before {
    background-color: var(--cyan-600);
}

#color-overlap .expression::before {
    content: "12 + 46";
    visibility: hidden;
}

#color-overlap .result::before {
    content: "58";
    visibility: hidden;
}

#color-overlap .button .states-overlay {
    inline-size: auto;
    block-size: 100%;
    aspect-ratio: 1 / 1;
}

#color-overlap .button .states-overlay::after {
    visibility: hidden;
    content: '';
    position: absolute;
    block-size: 100%;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    background-color: var(--states-base-color);
    opacity: 0.16;
}

#color-overlap [play="on"] {
    animation-duration: 5.5s;
}

#color-overlap [play="on"] .expression::before {
    animation-name: expressionShow, toVisible;
    animation-duration: 2s, 3.775s;
    animation-delay: 0.5s;
    animation-timing-function: step-end, linear;
    animation-fill-mode: forwards, backwards;
}

@keyframes expressionShow {
    0% {
        content: "1";
    }

    15% {
        content: "12";
    }

    50% {
        content: "12 +";
    }

    80% {
        content: "12 + 4";
    }

    100% {
        content: "12 + 46";
    }
}

#color-overlap [play="on"] .button .states-overlay::before {
    animation-name: rippleBackgroundAppear, fade;
    animation-duration: 225ms, 195ms;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#color-overlap [play="on"] .numeric .button:nth-child(7) .states-overlay::before {
    animation-delay: 0.5s, 0.725s;
}

#color-overlap [play="on"] .numeric .button:nth-child(8) .states-overlay::before {
    animation-delay: 0.8s, 1.025s;
}

#color-overlap [play="on"] .operator .button:nth-child(5) .states-overlay::before {
    animation-delay: 1.5s, 1.725s;
}

#color-overlap [play="on"] .numeric .button:nth-child(4) .states-overlay::before {
    animation-delay: 2.1s, 2.325s;
}

#color-overlap [play="on"] .numeric .button:nth-child(6) .states-overlay::before {
    animation-delay: 2.5s, 2.725s;
}

#color-overlap [play="on"] .operator .button:nth-child(2) .states-overlay::before {
    animation-delay: 3.5s, 4.605s;
}

@keyframes rippleBackgroundAppear {
    100% {
        opacity: 0.08;
    }
}

#color-overlap [play="on"] .button .states-overlay::after {
    visibility: visible;
    scale: 0;
    animation-name: expand_scale, fade;
    animation-duration: 400ms;
    animation-timing-function: cubic-bezier(0.17, 0.74, 0.4, 1), linear;
    animation-fill-mode: both;
}

#color-overlap [play="on"] .numeric .button:nth-child(7) .states-overlay::after {
    animation-delay: 0.5s;
}

#color-overlap [play="on"] .numeric .button:nth-child(8) .states-overlay::after {
    animation-delay: 0.8s;
}

#color-overlap [play="on"] .operator .button:nth-child(5) .states-overlay::after {
    animation-delay: 1.5s;
}

#color-overlap [play="on"] .numeric .button:nth-child(4) .states-overlay::after {
    animation-delay: 2.1s;
}

#color-overlap [play="on"] .numeric .button:nth-child(6) .states-overlay::after {
    animation-delay: 2.5s;
}

#color-overlap [play="on"] .operator .button:nth-child(2) .states-overlay::after {
    animation-delay: 3.5s, 4.605s;
}

#color-overlap [play="on"] .result::before {
    animation-name: resultShow, toVisible;
    animation-duration: 0.4s, 2.175s;
    animation-delay: 2.1s;
    animation-timing-function: step-end, linear;
    animation-fill-mode: both, backwards;
}

@keyframes resultShow {
    0% {
        content: "16";
    }

    100% {
        content: "58";
    }
}

#color-overlap [play="on"] .clear-ripple::before {
    animation-name: expand_scale, fade;
    animation-duration: 375ms;
    animation-delay: 3.9s, 4.275s;
    animation-timing-function: var(--deceleration-curve), linear;
    animation-fill-mode: forwards;
}

#parallax .schedule {
    inset-block-start: -40px;
}

#parallax img {
    inset-inline-start: -15%;
    translate: 0px calc(12 / 404 * 84px);
}

#parallax [play="on"] {
    animation-duration: 6s;
}

#parallax [play="on"] .schedule {
    animation-name: viewScroll1, viewScroll2, viewScroll3;
    animation-duration: 1.25s, 1.5s, 1.5s;
    animation-delay: 0.5s, 2.25s, 4.25s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes viewScroll1 {
    100% {
        inset-block-start: -136px;
    }
}

@keyframes viewScroll2 {
    100% {
        inset-block-start: 168px;
    }
}

@keyframes viewScroll3 {
    100% {
        inset-block-start: -40px;
    }
}

#parallax [play="on"] img {
    animation-name: imageMove1, imageMove2, imageMove3;
    animation-duration: 1.25s, 1.5s, 1.5s;
    animation-delay: 0.5s, 2.25s, 4.25s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes imageMove1 {
    100% {
        translate: 0px calc(84 / 404 * 84px);
    }
}

@keyframes imageMove2 {
    100% {
        translate: 0px calc(-220 / 404 * 84px);
    }
}

@keyframes imageMove3 {
    100% {
        translate: 0px calc(12 / 404 * 84px);
    }
}

#relative-static .diagram {
    block-size: 570px;
    align-items: start;
    justify-content: start;
    flex-direction: column;
}

#relative-static .surface {
    position: relative;
}

#relative-static .diagram>.surface:nth-child(2) {
    position: absolute;
    inline-size: 100%;
    block-size: var(--increment);
    background-color: var(--high-emphasis-surface-color);
    box-shadow: var(--shadow-z4);
}

#relative-static .surfaces {
    inline-size: 100%;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 8px;
    margin-block: calc(var(--increment) + var(--keyline));
    padding-inline: var(--keyline);
    box-sizing: border-box;
}

#relative-static .surfaces .surface {
    aspect-ratio: 1 / 1;
    background-color: var(--medium-emphasis-surface-color);
    box-shadow: var(--shadow-z2);
    border-radius: 2px;
}

#relative-static .diagram>.surface:last-child {
    inset-inline-end: var(--keyline);
    inset-block-end: var(--keyline);
    position: absolute;
    inline-size: 56px;
    aspect-ratio: 1 / 1;
    background-color: var(--blue-500);
    border-radius: 50%;
    box-shadow: var(--shadow-z6);
}

#relative-static [play="on"] {
    animation-duration: 5s;
}

#relative-static [play="on"] .surfaces {
    animation-name: surfacesMoveUp, moveClear;
    animation-duration: 2s;
    animation-delay: 0.5s, 3s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes surfacesMoveUp {
    100% {
        translate: 0% -50%;
    }
}

@media (width < 920px) {
    #absolute-elevation .illustration {
        flex-direction: column;
        padding: 0 0 40px 0;
    }

    #relative-elevation .illustration {
        flex-direction: column;
        padding: 0;
    }

    :is(#absolute-elevation, #relative-elevation) .wrapper {
        flex-direction: row;
    }

    #absolute-elevation .surface {
        inline-size: 120px;
        block-size: 120px;
    }

    #relative-elevation .wrapper>.surface {
        inline-size: 264px;
        block-size: 160px;
    }

    #relative-static .surfaces {
        grid-template-columns: repeat(2, 1fr);
        margin-block: calc(var(--increment) + 12px);
        padding-inline: 8px;
    }

    #relative-static .surfaces .surface:nth-of-type(2n) {
        display: none;
    }
}

/*------------------------------------*\
  主题
\*------------------------------------*/
:root {
    --primary-color: var(--cyan-500);
    --secondary-color: var(--lime-a200);
}

::selection {
    color: rgb(0 0 0 / 0.87);
    background-color: var(--secondary-color);
}

main>.app-bar {
    --surface-shade-color: rgb(38 50 56 / 0.2);
    color: var(--secondary-text-color);
}

h1 {
    --primary-text-color: white;
}

footer a:nth-of-type(2) {
    --primary-color: var(--purple-600);
}

@media (prefers-color-scheme: dark) {
    :is(#without-shadow, #similar-shadow, #distinguishable-shadow) .diagram {
        background-color: var(--grey-950);
    }
}