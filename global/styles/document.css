/*------------------------------------*\
  全局设定
\*------------------------------------*/

:root {
    --increment: 64px;
    --keyline: 24px;
    --content-columns: 3;
    --content-unit-inline-size: 360px;
    --content-column-gap: 40px;
    --content-inline-size: calc(var(--content-columns) * var(--content-unit-inline-size) + (var(--content-columns) - 1) * var(--content-column-gap));
}

html {
    color: var(--primary-text-color);
    background-color: var(--medium-emphasis-surface-color);
    font-family: "Roboto", "Noto Sans SC", sans-serif;
    scroll-behavior: smooth;
}

body {
    position: relative;
    display: flex;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
}

video::cue {
    font-family: "Roboto", "Noto Sans SC", sans-serif;
    background-color: rgb(0 0 0 / 0.4);
}

/*------------------------------------*\
  导航抽屉
\*------------------------------------*/

#drawer-trigger {
    visibility: hidden;
}

body>.drawer {
    z-index: 16;
    inline-size: 256px;
}

body>.drawer figure {
    flex-shrink: 0;
    block-size: var(--increment);
    display: flex;
    align-items: center;
    column-gap: var(--keyline);
    padding-inline: var(--keyline);
}

body>.drawer figure svg {
    inline-size: 24px;
}

body>.drawer figcaption {
    font-weight: 500;
    font-family: "Roboto Mono", monospace;
}

body>.drawer details {
    overflow: clip;
    flex-shrink: 0;
}

body>.drawer details:first-of-type {
    margin-block-start: 8px;
}

body>.drawer summary {
    position: relative;
    block-size: 48px;
    display: flex;
    align-items: center;
    padding-inline: var(--keyline);
    cursor: pointer;
}

body>.drawer li a {
    block-size: 36px;
    display: flex;
    align-items: center;
    padding-inline-start: calc(2 * var(--keyline));
    font-size: 0.8125rem;
}

body>.drawer li[activated] {
    --states-base-color: currentColor;
    --ripple-opacity: 0.13;
    color: var(--primary-color);
    font-weight: 500;
}

body>.drawer+.scrim {
    z-index: 15;
}

body>.divider[vertical] {
    inset-block-start: revert;
    block-size: auto;
    position: sticky;
}

/*------------------------------------*\
  应用栏
\*------------------------------------*/
main>.toolbar {
    z-index: 4;
    grid-column: 1 / -1;
    align-self: start;
}

main>.toolbar .title {
    inline-size: min(100%, calc(var(--content-columns) * var(--content-unit-inline-size) + (var(--content-columns) - 1) * var(--content-column-gap)));
    justify-self: center;
    user-select: none;
}

main>.toolbar[variant~="prominent"] {
    animation-name: appBarSurfaceFlex;
    animation-timeline: scroll(root);
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes appBarSurfaceFlex {
    0% {
        padding-block-end: calc(3 * var(--increment));
        box-shadow: var(--shadow-z0);
    }
}

main>.toolbar[variant~="prominent"]::after {
    animation-name: appBarBorderShow;
    animation-timeline: scroll(root);
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes appBarBorderShow {
    0% {
        border-block-end-color: transparent;
    }
}

main>.toolbar[variant~="prominent"] .title {
    animation-name: appBarTextScale;
    animation-timeline: scroll(root);
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes appBarTextScale {
    0% {
        transform: translateY(calc(2 * var(--increment)));
        font-size: 3.5rem;
        font-weight: 400;
    }
}

/*------------------------------------*\
  内容
\*------------------------------------*/

main {
    flex-grow: 1;
    display: grid;
    grid-template-columns: 1fr repeat(var(--content-columns), var(--content-unit-inline-size)) 1fr;
    column-gap: var(--content-column-gap);
    row-gap: var(--increment);
}

header {
    grid-column: 2 / span var(--content-columns);
    display: flex;
    flex-direction: column;
}

h2 {
    color: var(--primary-color);
    margin-block-end: var(--content-column-gap);
    user-select: text;
}

header p {
    max-inline-size: 940px;
    margin-block-end: var(--increment);
    font-weight: 400;
}

header video {
    margin-block-end: var(--content-column-gap);
}

nav {
    margin-block: var(--keyline);
    padding-inline-start: 24px;
    color: var(--primary-color);
    border-inline-start: 4px solid;
}

nav>h3 {
    padding-block-end: 1em;
    color: var(--secondary-text-color);
}

nav li {
    font-weight: 400;
    line-height: 2em;
}

article {
    grid-column: 2 / span var(--content-columns);
    display: grid;
    grid-template-columns: repeat(var(--content-columns), var(--content-unit-inline-size));
    gap: var(--content-column-gap);
    margin-block-end: var(--increment);
    scroll-margin-block-start: calc(2 * var(--increment));
}

article[horizontal] section {
    grid-column: 1 / -1;
    display: grid;
    grid-template-columns: repeat(var(--content-columns), var(--content-unit-inline-size));
    gap: var(--content-column-gap);
}

article[vertical] section {
    display: flex;
    flex-direction: column;
    margin-block-end: var(--keyline);
}

article[horizontal] section+section,
figure:not(:has(p))+section {
    margin-block-start: 40px;
}

.paragraphs {
    grid-column-start: 1;
}

.paragraphs[long] {
    grid-column-end: span min(2, var(--content-columns));
}

article>h3 {
    color: var(--primary-color);
    grid-column: 1 / -1;
    user-select: text;
}

h4 {
    margin-block-end: 1em;
    font-weight: 400;
    color: var(--primary-text-color);
    user-select: text;
}

article[horizontal] figure:has(p) {
    margin-block-end: var(--keyline);
}

article[vertical] figure {
    margin-block-end: 2.5em;
}

main figcaption {
    display: flex;
    flex-direction: column;
    color: var(--secondary-text-color-alt);
    user-select: text;
}

figcaption :is(ul, ol) {
    margin-block-start: 3px;
}

figcaption:not(:has(.recommends)) :is(p, ul, ol):first-child {
    margin-block-start: 1em;
}

.paragraphs>ul {
    padding-inline-start: 2em;
}

.paragraphs>ul li {
    list-style-type: disc;
}

figure>:is(.illustration, .diagram, .simulator) {
    isolation: isolate;
}

figure>:is(.illustration, .diagram) {
    position: relative;
    display: flex;
    overflow: hidden;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
}

.diagram {
    background-color: var(--diagram-background-color);
}

.diagram:not(:has(video)) {
    container-name: diagram;
    container-type: size;
}

figure>:is(.illustration, .diagram, .simulator)::before {
    content: "";
    z-index: 27;
    inset: 0;
    position: absolute;
    box-shadow: inset 0px 0px 0px 1px var(--diagram-border-color);
    pointer-events: none;
}

figure>:is(.illustration, .diagram, .simulator)::after {
    content: "";
    inset: 0;
    position: absolute;
    pointer-events: none;
}

.diagram::after,
.simulator::after {
    display: flex;
    align-items: center;
    justify-content: center;
    transition-property: opacity;
    transition-duration: 200ms;
    transition-timing-function: linear;
}

.recommends {
    margin-block-start: 16px;
    padding-block-start: 1em;
    border-block-start: 16px solid;
}

.recommends+p {
    color: var(--primary-text-color);
}

.recommends[sign="do"] {
    border-color: var(--green-500);
    color: var(--green-800);
}

.recommends[sign="dont"] {
    border-color: var(--red-700);
    color: var(--red-700);
}

.recommends[sign="caution"] {
    border-color: var(--yellow-800);
    color: var(--yellow-900);
}

table {
    margin-block-end: var(--keyline);
    border-collapse: collapse;
    user-select: text;
}

table thead {
    background-color: var(--medium-emphasis-surface-color);
}

table tbody {
    background-color: var(--high-emphasis-surface-color);
    color: var(--primary-text-color);
}

table th,
table td {
    border: 1px solid var(--sheet-border-color);
    padding: calc(var(--keyline) / 2 + 4px) var(--keyline);
}

table[density="dense"] tbody th,
table[density="dense"] tbody td {
    padding: calc(var(--keyline) / 2) var(--keyline);
}

table span {
    display: block;
}

main hr {
    grid-column: 2 / span var(--content-columns);
}

h5 {
    margin-block-end: 0.5em;
    font-weight: 500;
    color: var(--primary-text-color);
    user-select: text;
}

@scope (body) to (.illustration, .diagram, .simulator) {

    p,
    ul,
    ol {
        text-align: justify;
        user-select: text;
    }

    :is(p, ul, ol):not(:last-child) {
        margin-block-end: 1.75em;
    }

    p[type-scale="title"]:not(:last-child) {
        margin-block-end: 1.5em;
    }

    p+:is(ul, ol) {
        margin-block-start: -0.875em;
    }

    article a {
        color: var(--primary-color);
        text-decoration: underline;
    }
}

/*------------------------------------*\
  模拟器
\*------------------------------------*/

.simulator {
    --status-bar-block-size: 24px;
    --scale-ratio: 1;
    container-name: simulator;
    container-type: size;
    position: relative;
    min-inline-size: 360px;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    background-color: var(--medium-emphasis-surface-color);
    transform-origin: left top;
    scale: var(--scale-ratio);
}

figure[screen~="tablet"] {
    grid-column-end: span min(2, var(--content-columns));
}

figure[screen="tablet"] .simulator {
    min-inline-size: 760px;
    block-size: 570px;
}

figure[screen~="mobile"] .simulator {
    block-size: 640px;
}

.diagram[animated]::after,
.simulator[animated]::after {
    content: url(../resources/play_circle_filled.svg);
    z-index: 26;
    line-height: 1;
    background-color: rgb(0 0 0 / 0.4);
    pointer-events: auto;
    cursor: pointer;
}

.diagram[play]::after,
.simulator[play]::after {
    opacity: 0;
    transition-duration: 150ms;
}

.diagram[play="on"],
.simulator[play="on"] {
    animation-name: timetrick;
    animation-fill-mode: both;
    animation-timing-function: linear;
}

@keyframes timetrick {
    0% {}

    100% {}
}

.system {
    z-index: 25;
    position: absolute;
    inline-size: 100%;
    block-size: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    pointer-events: none;
}

.system .status {
    block-size: var(--status-bar-block-size);
    direction: rtl;
    display: flex;
    align-items: center;
    padding: 0 4px;
    color: var(--status-bar-color, rgb(255 255 255 / 0.9));
}

.system .status cmd-icon[name="battery_full_alt"] {
    margin-inline-end: 2.5px;
}

.system .status span {
    margin-inline: 4px;
    padding-block-start: 1px;
    line-height: 1;
}

.system .navigation {
    block-size: 48px;
    display: grid;
    grid-template-columns: repeat(3, var(--navigation-button-inline-size));
    grid-template-rows: 100%;
    grid-template-areas: "back home recent";
    justify-content: space-between;
    align-items: center;
    justify-items: center;
    padding-inline: var(--navigation-bar-inline-padding);
    color: rgb(255 255 255 / 0.9);
}

.navigation cmd-icon {
    filter: drop-shadow(0 1.5px 0.5px rgb(0 0 0 / 0.2)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.14)) drop-shadow(0 1px 2.5px rgb(0 0 0 / 0.12));
}

.navigation cmd-icon[name="arrow_back_system"] {
    grid-area: back;
}

.navigation cmd-icon[name="circle_home"] {
    grid-area: home;
}

.navigation cmd-icon[name="square_recent"] {
    grid-area: recent;
}

.application {
    --increment: 56px;
    --keyline: 16px;
    z-index: 24;
    position: relative;
    inline-size: 100%;
    block-size: 100%;
    display: flex;
    flex-direction: column;
    color: var(--primary-text-color);
}

.overlay[variant="status-bar"] {
    inset-block-start: 0;
    position: absolute;
    inline-size: 100%;
    block-size: var(--status-bar-block-size);
    background-color: var(--status-bar-background-color);
    overflow: clip;
}

.overlay[variant="navigation-bar"] {
    z-index: 25;
    inset-block-end: 0;
    position: absolute;
    inline-size: 100%;
    block-size: 48px;
    background-color: black;
    overflow: clip;
}

.overlay[variant="navigation-bar"][theme="translucent"] {
    opacity: 0.4;
}

.navigation-ripple {
    visibility: hidden;
    inline-size: 135%;
    max-inline-size: 128px;
    block-size: 100%;
    background-color: white;
    border-radius: 24px;
    opacity: 0.2;
}

@keyframes navigationRippleEnter {
    0% {
        scale: 0 1;
    }

    100% {
        scale: 1 1;
    }
}

.user-input {
    z-index: 26;
    position: absolute;
    inline-size: 100%;
    block-size: 100%;
    display: grid;
    grid-template: 1fr / 1fr;
}

.touch {
    grid-area: 1 / 1 / 2 / 2;
    position: relative;
    display: grid;
    inline-size: 36px;
    block-size: 36px;
    grid-template: 1fr / 1fr;
    place-content: center;
    place-items: center;
    background-color: rgb(255 255 255 / 0.8);
    background-clip: content-box;
    border: 62px solid rgb(255 64 129 / 0.2);
    border-radius: 50%;
}

.touch::after,
.touch::before {
    content: "";
    grid-area: 1 / 1 / 2 / 2;
    inline-size: 100%;
    aspect-ratio: 1/1;
    border-radius: 50%;
}

.touch::after {
    border: 14px solid rgb(255 64 129 / 0.3);
}

.touch::before {
    border: 4px solid rgb(255 64 129 / 1);
}

@keyframes touchIn {
    0% {
        inline-size: 56px;
        block-size: 56px;
        border-width: 0px;
        background-color: rgb(255 255 255 / 0);
        border-color: rgb(255 64 129 / 0);
    }
}

@keyframes touchOut {
    50% {
        border-color: rgb(255 64 129 / 0);
    }

    100% {
        inline-size: 56px;
        block-size: 56px;
        border-width: 0px;
        background-color: rgb(255 255 255 / 0);
        border-color: rgb(255 64 129 / 0);
    }
}

/*------------------------------------*\
  页脚导航
\*------------------------------------*/

footer {
    position: relative;
    display: flex;
    block-size: 96px;
    color: var(--primary-text-color);
}

footer {
    grid-column: 1 / -1;
}

footer a {
    position: relative;
    flex-basis: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-inline: calc(50% - var(--content-inline-size) / 2) var(--keyline);
    background-color: var(--primary-color);
}

footer a:nth-of-type(2) {
    direction: rtl;
}

footer a span:first-of-type {
    color: var(--secondary-text-color);
}

footer a span:last-of-type {
    position: relative;
}

footer cmd-icon {
    position: absolute;
    block-size: 1.5em;
    inset-inline-start: calc(0px - 1.5rem - 32px);
}

/*------------------------------------*\
  跨屏幕
\*------------------------------------*/

@media (width < 1576px) {
    :root {
        --content-columns: 2;
    }

    #drawer-trigger {
        visibility: visible;
    }

    body>.drawer {
        position: fixed;
    }

    body>.drawer:not([open]) {
        visibility: hidden;
    }

    body>.drawer:not([enter]) {
        transform: translateX(-100%);
    }

    body>.divider {
        display: none;
    }

    body>.toolbar,
    main,
    .paragraphs {
        grid-column: 1 / -1;
    }
}

@media (width >=920px) {
    figure[screen~="tablet"] .simulator {
        block-size: 570px;
    }
}

@media (width < 920px) {
    :root {
        --content-columns: 1;
    }

    main {
        column-gap: var(--keyline);
    }

    figure[screen="tablet"] .simulator {
        --scale-ratio: calc(360 / 760);
        margin-block-end: calc(0px - calc(1 - var(--scale-ratio)) * 570px);
    }
}

@media (width < 504px) {
    :root {
        --increment: 56px;
        --keyline: 16px;
    }

    main>.toolbar .title {
        justify-self: start;
    }

    footer a {
        padding-inline: calc(2 * var(--keyline) + 1.5rem) var(--keyline);
    }

    footer cmd-icon {
        inset-inline-start: calc(0px - 1.5rem - var(--keyline));
    }

    @scroll-timeline appBarFlex {
        start: 0;
        end: 168px;
    }
}

@media (width < 392px) {
    :root {
        --content-unit-inline-size: auto;
    }

    @keyframes appBarSurfaceFlex {
        0% {
            padding-block-end: calc(2 * var(--increment));
            box-shadow: var(--shadow-z0);
        }
    }

    @keyframes appBarTextScale {
        0% {
            transform: translateY(calc(1.5 * var(--increment)));
            font-size: 2.8125rem;
            font-weight: 400;
        }
    }

    footer a {
        flex-grow: 1;
        flex-basis: unset;
    }

    figure {
        inline-size: calc(100vw - 2 * var(--keyline));
    }

    .simulator {
        --scale-ratio: min(calc((var(--window-width) - 32) / 360), 1);
        margin-block-end: calc(0px - calc(1 - var(--scale-ratio)) * 100cqb);
    }

    figure[screen="tablet"] .simulator {
        --scale-ratio: min(calc((var(--window-width) - 32) / 760), 1);
    }
}

@container simulator (width >=360px) {
    .system .navigation {
        --navigation-button-inline-size: 80px;
        --navigation-bar-inline-padding: 40px;
    }
}

@container simulator (width >=600px) {
    .system .navigation {
        --navigation-button-inline-size: 162px;
        --navigation-bar-inline-padding: 42px;
        justify-content: center;
    }

    .application {
        --increment: 64px;
        --keyline: 24px;
    }
}

/*------------------------------------*\
  主题
\*------------------------------------*/

@media (prefers-color-scheme: light) {
    :root {
        --sheet-border-color: var(--grey-200);
        --diagram-background-color: var(--grey-200);
        --diagram-border-color: rgb(0 0 0 / 0.08);
        --status-bar-background-color: var(--grey-300);
    }

    .diagram {
        background-image: radial-gradient(circle at top left, rgb(0 0 0 / 0) calc(1 / 3 * 100%), rgb(0 0 0 / 0.01) calc(7 / 9 * 100%), rgb(0 0 0 / 0.02) 100%);
    }

    [theme="ligth-dark"] {
        --status-bar-color: rgb(0 0 0 / 0.6);
    }
}

[theme~="light"] {
    --sheet-border-color: var(--grey-200);
    --status-bar-color: rgb(0 0 0 / 0.6);
    --status-bar-background-color: var(--grey-300);
}

@media (prefers-color-scheme: dark) {
    :root {
        --sheet-border-color: var(--grey-700);
        --diagram-background-color: var(--grey-900);
        --diagram-border-color: rgb(255 255 255 / 0.08);
        --status-bar-background-color: black;
    }

    body>.drawer figure circle {
        fill: #747474;
    }

    .diagram {
        background-image: radial-gradient(circle at top left, rgb(0 0 0 / 0) calc(1 / 3 * 100%), rgb(0 0 0 / 0.04) calc(7 / 9 * 100%), rgb(0 0 0 / 0.08) 100%);
    }

    .recommends[sign="do"] {
        color: var(--green-400);
    }

    .recommends[sign="dont"] {
        color: var(--red-500);
    }

    [theme="ligth-dark"] {
        --status-bar-color: rgb(255 255 255 / 0.9);
    }
}

[theme~="dark"] {
    --sheet-border-color: var(--grey-700);
    --status-bar-color: rgb(255 255 255 / 0.9);
    --status-bar-background-color: black;
}

main>.toolbar,
footer {
    --states-parameter: 2;
}