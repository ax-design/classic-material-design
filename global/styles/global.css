@layer reset,base;
@import "./modules/base.css" layer(base);
@import "./modules/app-bars.css" layer(base);
@import "./modules/buttons.css" layer(base);
@import "./modules/dividers.css" layer(base);
@import "./modules/lists.css" layer(base);
@import "./modules/sheets.css" layer(base);

@layer reset {
    a {
        text-decoration: none;
        color: inherit;
    }

    figure {
        margin: 0;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        margin: 0;
    }

    h1,
    h2,
    h4,
    h5,
    h6 {
        line-height: 1;
    }

    img {
        inline-size: 100%;
        vertical-align: middle;
        object-fit: cover;
        -webkit-user-drag: none;
    }

    ol,
    ul,
    li {
        position: relative;
        margin: 0;
        padding: 0;
        list-style: none;
    }

    ol li {
        list-style-type: decimal;
        list-style-position: inside;
    }

    p {
        margin: 0;
        text-align: justify;
        user-select: text;
    }

    table {
        block-size: fit-content;
    }

    thead {
        border-spacing: 0;
        color: var(--secondary-text-color);
    }

    th {
        font-weight: inherit;
        text-align: start;
    }

    th,
    td {
        position: relative;
    }

    video {
        inline-size: 100%;
    }
}

/*------------------------------------*\
  全局设定
\*------------------------------------*/
:root {
    --increment: 64px;
    --keyline: 24px;
    --content-columns: 3;
    --content-unit-inline-size: 360px;
    --content-column-gap: 40px;
    --content-inline-size: calc(var(--content-columns) * var(--content-unit-inline-size) + (var(--content-columns) - 1) * var(--content-column-gap));
}

html {
    color: var(--primary-text-color);
    background-color: var(--medium-emphasis-surface-color);
    font-family: "Roboto", "Noto Sans SC", sans-serif;
}

body {
    position: relative;
    display: flex;
    margin: 0;
    -webkit-tap-highlight-color: transparent;
    user-select: none;
}

/*------------------------------------*\
  导航抽屉
\*------------------------------------*/
#drawer-trigger {
    visibility: hidden;
}

body>.drawer {
    z-index: 16;
    inline-size: 256px;
}

body>.drawer figure {
    flex-shrink: 0;
    block-size: var(--increment);
    display: flex;
    align-items: center;
    column-gap: var(--keyline);
    padding-inline: var(--keyline);
}

body>.drawer figure svg {
    inline-size: 24px;
}

body>.drawer figcaption {
    font-weight: 500;
    font-family: "Roboto Mono", monospace;
}

body>.drawer li ul {
    overflow: clip;
    block-size: calc(36px * var(--rows));
    transition-property: height;
    transition-duration: 250ms;
    transition-timing-function: var(--standard-curve);
}

body>.drawer li:not([open]) ul {
    block-size: 0px;
    transition-duration: 300ms;
}

body>.drawer span {
    position: relative;
    block-size: 48px;
    display: flex;
    align-items: center;
    padding-inline-start: var(--keyline);
    cursor: pointer;
}

body>.drawer li a {
    block-size: 36px;
    display: flex;
    align-items: center;
    padding-inline-start: calc(2 * var(--keyline));
    font-size: 0.8125rem;
}

body>.drawer li[activated] {
    --states-base-color: currentColor;
    color: var(--primary-color);
    font-weight: 500;
}

body>.drawer+.scrim {
    z-index: 15;
}

body>.divider[vertical] {
    inset-block-start: revert;
    block-size: auto;
    position: sticky;
}

/*------------------------------------*\
  应用栏
\*------------------------------------*/
main>.app-bar {
    z-index: 4;
    grid-column: 1 / -1;
}

main>.app-bar .title {
    inline-size: min(100%, calc(var(--content-columns) * var(--content-unit-inline-size) + (var(--content-columns) - 1) * var(--content-column-gap)));
    justify-self: center;
    user-select: none;
}

main>.app-bar[variant="prominent"] {
    animation-name: appBarSurfaceFlex;
    animation-timeline: appBarFlex;
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@scroll-timeline appBarFlex {
    start: 0;
    end: 192px;
}

@keyframes appBarSurfaceFlex {
    0% {
        block-size: calc(4 * var(--increment));
        box-shadow: var(--shadow-z0);
    }

    100% {
        block-size: var(--increment);
        box-shadow: var(--shadow-z4);
    }
}

main>.app-bar[variant="prominent"]::after {
    animation-name: appBarBorderShow;
    animation-timeline: appBarFlex;
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes appBarBorderShow {
    0% {
        border-block-end-color: transparent;
    }

    100% {
        border-block-end-color: var(--surface-shade-color);
    }
}

main>.app-bar[variant="prominent"] .title {
    animation-name: appBarTextScale;
    animation-timeline: appBarFlex;
    animation-timing-function: linear;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

@keyframes appBarTextScale {
    0% {
        transform: translateY(calc(2 * var(--increment)));
        font-size: 3.5rem;
        font-weight: 400;
    }

    100% {
        transform: translateY(0px);
        font-size: 1.25rem;
        font-weight: 500;
    }
}

/*------------------------------------*\
  内容
\*------------------------------------*/
main {
    flex-grow: 1;
    display: grid;
    grid-template-columns: 1fr repeat(var(--content-columns), var(--content-unit-inline-size)) 1fr;
    column-gap: var(--content-column-gap);
    row-gap: var(--increment);
}

header {
    grid-column: 2 / span var(--content-columns);
    display: flex;
    flex-direction: column;
}

h2 {
    color: var(--primary-color);
    margin-block-end: var(--content-column-gap);
    user-select: text;
}

header p {
    margin-block-end: var(--increment);
    font-weight: 400;
}

nav {
    margin-block: var(--keyline);
    padding-inline-start: 24px;
    color: var(--primary-color);
    border-inline-start: 4px solid;
}

nav>h3 {
    padding-block-end: 1em;
    color: var(--secondary-text-color);
}

nav li {
    font-weight: 400;
    line-height: 2em;
}

article {
    grid-column: 2 / span var(--content-columns);
    display: grid;
    grid-template-columns: repeat(var(--content-columns), var(--content-unit-inline-size));
    gap: var(--content-column-gap);
    margin-block-end: var(--increment);
    scroll-margin-block-start: calc(2 * var(--increment));
}

article[vertical] section {
    display: flex;
    flex-direction: column;
    margin-block-end: var(--keyline);
}

.paragraphs {
    grid-column-start: 1;
}

.paragraphs[long] {
    grid-column-end: span min(2, var(--content-columns));
}

article>h3 {
    color: var(--primary-color);
    grid-column: 1 / -1;
    user-select: text;
}

h4 {
    margin-block-end: 1em;
    font-weight: 400;
    color: var(--primary-text-color);
    user-select: text;
}

article[horizontal] figure:has(p) {
    margin-block-end: var(--keyline);
}

article[vertical] figure {
    margin-block-end: 2.5em;
}

main figcaption {
    display: flex;
    flex-direction: column;
    color: var(--secondary-text-color-alt);
    user-select: text;
}

figcaption :is(ul, ol) {
    margin-block-start: 3px;
}

figcaption:not(:has(.recommends)) :is(p, ul, ol) {
    margin-block-start: 1em;
}

:is(section, .paragraphs, figcaption) p:not(:last-of-type) {
    margin-block-end: 1em;
}

:is(.paragraphs, figcaption) :is(ul, ol) {
    user-select: text;
}

.paragraphs>ul {
    padding-inline-start: 2em;
}

.paragraphs> :is(ul, ol) li {
    margin-block: 7px;
}

.paragraphs>ul li {
    list-style-type: disc;
}

figure> :is(.illustration, .diagram) {
    position: relative;
    display: flex;
    overflow: hidden;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
}

.diagram {
    background-color: var(--diagram-background-color);
}

figure>:is(.illustration, .diagram, .simulator)::before {
    content: "";
    z-index: 1;
    inset: 0;
    position: absolute;
    box-shadow: inset 0px 0px 0px 1px var(--diagram-border-color);
    pointer-events: none;
}

figure>:is(.illustration, .diagram, .simulator)::after {
    content: "";
    inset: 0;
    position: absolute;
    pointer-events: none;
}

.diagram::after,
.simulator::after {
    display: flex;
    align-items: center;
    justify-content: center;
    transition-property: opacity;
    transition-duration: 225ms;
    transition-timing-function: var(--standard-curve);
}

.recommends {
    margin-block-start: 16px;
    padding-block-start: 1em;
    border-block-start: 16px solid;
}

.recommends+p {
    color: var(--primary-text-color);
}

.recommends[sign="do"] {
    border-color: var(--green-500);
    color: var(--green-800);
}

.recommends[sign="dont"] {
    color: var(--red-700);
}

.recommends[sign="caution"] {
    border-color: var(--yellow-800);
    color: var(--yellow-900);
}

table {
    margin-block-end: var(--keyline);
    border-collapse: collapse;
    user-select: text;
}

table thead {
    background-color: var(--medium-emphasis-surface-color);
}

table tbody {
    background-color: var(--high-emphasis-surface-color);
    color: var(--primary-text-color);
}

table th,
table td {
    border: 1px solid var(--sheet-border-color);
    padding: calc(var(--keyline) / 2 + 4px) var(--keyline);
}

table[density="dense"] tbody th,
table[density="dense"] tbody td {
    padding: calc(var(--keyline) / 2) var(--keyline);
}

table span {
    display: block;
}

main hr {
    grid-column: 2 / span var(--content-columns);
}

/*------------------------------------*\
  输入事件
\*------------------------------------*/
.touch-input {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
}

.touch-input div {
    position: absolute;
    aspect-ratio: 1/1;
    border-radius: 50%;
}

.touch-input .core {
    inline-size: 36px;
    background-color: rgb(255 255 255 / 0.7);
    border: 4px solid rgb(255 64 129 / 1);
}

.touch-input .foreground {
    inline-size: 44px;
    border: 8px solid rgb(255 64 129 / 0.38);
}

.touch-input .background {
    inline-size: 60px;
    border: 48px solid rgb(255 64 129 / 0.2);
}

/*------------------------------------*\
  模拟器
\*------------------------------------*/
.simulator {
    --status-bar-block-size: 24px;
    container-name: simulator;
    container-type: size;
    position: relative;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    background-color: var(--medium-emphasis-surface-color);
}

figure[screen~="mobile"] .simulator {
    block-size: 640px;
}

.diagram[animated]::after,
.simulator[animated]::after {
    content: url(../resources/play_circle_filled.svg);
    background-color: rgb(0 0 0 / 0.4);
    pointer-events: auto;
    cursor: pointer;
}

.diagram[play]::after,
.simulator[play]::after {
    opacity: 0;
    transition-duration: 195ms;
}

.diagram[play="on"],
.simulator[play="on"] {
    animation-name: timetrick;
    animation-fill-mode: both;
    animation-timing-function: linear;
}

@keyframes timetrick {
    0% {}

    100% {}
}

.system {
    position: absolute;
    inline-size: 100%;
    block-size: 100%;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    pointer-events: none;
}

.system .status {
    block-size: var(--status-bar-block-size);
    direction: rtl;
    display: flex;
    align-items: center;
    padding: 0 4px;
    color: var(--status-bar-color, rgb(255 255 255 / 0.9));
}

.system .status cmd-icon[name="battery_full_alt"] {
    margin-inline-end: 2.5px;
}

.system .status span {
    margin-inline: 4px;
    padding-block-start: 1px;
    line-height: 1;
}

.system .navigation {
    block-size: 48px;
    display: grid;
    grid-template-columns: repeat(3, var(--navigation-button-inline-size));
    justify-content: space-between;
    align-items: center;
    justify-items: center;
    padding-inline: var(--navigation-bar-inline-padding);
    color: rgb(255 255 255 / 0.9);
}

.navigation cmd-icon {
    filter: drop-shadow(0 1.5px 0.5px rgba(0, 0, 0, 0.2)) drop-shadow(0 1px 1px rgba(0, 0, 0, 0.14)) drop-shadow(0 1px 2.5px rgba(0, 0, 0, 0.12));
}

.application {
    --increment: 56px;
    --keyline: 16px;
    position: relative;
    inline-size: 100%;
    block-size: 100%;
    display: flex;
    flex-direction: column;
}

.application>.overlay {
    position: absolute;
    inline-size: 100%;
    block-size: 100%;
    display: grid;
    grid-template-rows: var(--status-bar-block-size) 1fr 48px;
    pointer-events: none;
}

.application>.overlay .status {
    position: relative;
    overflow: clip;
}

.application>.overlay .navigation {
    position: relative;
    grid-row-start: 3;
    background-color: black;
    overflow: clip;
}

/*------------------------------------*\
  特别修改
\*------------------------------------*/
.application .app-bar {
    padding-block-start: var(--status-bar-block-size);
}

/*------------------------------------*\
  页脚导航
\*------------------------------------*/
footer {
    position: relative;
    display: flex;
    block-size: 96px;
    color: var(--primary-text-color);
}

footer {
    grid-column: 1 / -1;
}

footer a {
    position: relative;
    flex-basis: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    padding-inline: calc(50% - var(--content-inline-size) / 2) var(--keyline);
    background-color: var(--primary-color);
}

footer a:nth-of-type(2) {
    direction: rtl;
}

footer a span:first-of-type {
    color: var(--secondary-text-color);
}

footer a span:last-of-type {
    position: relative;
}

footer cmd-icon {
    position: absolute;
    block-size: 1.5em;
    inset-inline-start: calc(0px - 1.5rem - 32px);
}

/*------------------------------------*\
  跨屏幕
\*------------------------------------*/
@media (width < 1576px) {
    :root {
        --content-columns: 2;
    }

    #drawer-trigger {
        visibility: visible;
    }

    body>.drawer {
        position: fixed;
    }

    body>.drawer:not([open]) {
        visibility: hidden;
    }

    body>.drawer:not([enter]) {
        transform: translateX(-100%);
    }

    body>.divider {
        display: none;
    }

    body>.app-bar,
    main,
    .paragraphs {
        grid-column: 1 / -1;
    }
}

@media (width < 920px) {
    :root {
        --content-columns: 1;
    }

    main {
        column-gap: var(--keyline);
    }
}

@media (width < 504px) {
    :root {
        --increment: 56px;
        --keyline: 16px;
    }

    main>.app-bar .title {
        justify-self: start;
    }

    footer a {
        padding-inline: calc(2 * var(--keyline) + 1.5rem) var(--keyline);
    }

    footer cmd-icon {
        inset-inline-start: calc(0px - 1.5rem - var(--keyline));
    }

    @scroll-timeline appBarFlex {
        start: 0;
        end: 168px;
    }
}

@media (width < 392px) {
    :root {
        --content-unit-inline-size: auto;
    }

    main>.app-bar {
        --title-margin-final-offset: 12px;
    }

    main>.app-bar[variant="prominent"] {
        --title-margin-final-offset: calc(var(--increment) + 12px);
        --title-margin-begin-offset: 12px;
    }
}

@container simulator (width >=600px) {
    .system .navigation {
        --navigation-button-inline-size: 162px;
        --navigation-bar-inline-padding: 42px;
        justify-content: center;
    }

    .application {
        --increment: 64px;
        --keyline: 24px;
    }
}

@container simulator (width >=360px) {
    .system .navigation {
        --navigation-button-inline-size: 80px;
        --navigation-bar-inline-padding: 40px;
    }
}

/*------------------------------------*\
  主题
\*------------------------------------*/
@media (prefers-color-scheme: light) {
    :root {
        --sheet-border-color: var(--grey-200);
        --diagram-background-color: var(--grey-200);
        --diagram-border-color: rgb(0 0 0 / 0.08);
        --status-bar-background-color: var(--grey-300);
    }

    .diagram {
        background-image: radial-gradient(circle at top left, rgba(0, 0, 0, 0) calc(1 / 3 * 100%), rgba(0, 0, 0, 0.01) calc(7 / 9 * 100%), rgba(0, 0, 0, 0.02) 100%);
    }

    [theme="dark-light"] {
        --status-bar-color: rgb(0 0 0 / 0.6);
    }
}

[theme~="light"] {
    --sheet-border-color: var(--grey-200);
    --status-bar-color: rgb(0 0 0 / 0.6);
    --status-bar-background-color: var(--grey-300);
}

@media (prefers-color-scheme: dark) {
    :root {
        --sheet-border-color: var(--grey-700);
        --diagram-background-color: var(--grey-900);
        --diagram-border-color: rgb(255 255 255 / 0.08);
        --status-bar-background-color: black;
    }

    body>.drawer figure circle {
        fill: #747474;
    }

    .diagram {
        background-image: radial-gradient(circle at top left, rgba(0, 0, 0, 0) calc(1 / 3 * 100%), rgba(0, 0, 0, 0.04) calc(7 / 9 * 100%), rgba(0, 0, 0, 0.08) 100%);
    }

    .recommends[sign="do"] {
        color: var(--green-400);
    }

    [theme="dark-light"] {
        --status-bar-color: rgb(255 255 255 / 0.9);
    }
}

[theme~="dark"] {
    --sheet-border-color: var(--grey-700);
    --status-bar-color: rgb(255 255 255 / 0.9);
    --status-bar-background-color: black;
}

main>.app-bar,
footer {
    --states-parameter: 2;
}