@layer reset, base, document, application;
@import "../../global/styles/applications/basil.css" layer(application);
@import "../../global/styles/applications/chrome.css" layer(application);
@import "../../global/styles/applications/clock.css" layer(application);
@import "../../global/styles/applications/inbox.css" layer(application);
@import "../../global/styles/applications/launcher.css" layer(application);
@import "../../global/styles/applications/plaid.css" layer(application);
@import "../../global/styles/applications/settings.css" layer(application);
@import "../../global/styles/applications/system.css" layer(application);

/*------------------------------------*\
  正文
\*------------------------------------*/

main:has(>.toolbar[variant~="prominent"]) {
    grid-template-rows: calc(4 * var(--increment));
}

#hierarchy .tile:nth-of-type(4) {
    z-index: 5;
}

#hierarchy .scrim {
    visibility: hidden;
}

#hierarchy .view {
    visibility: hidden;
    inset: 0;
    position: absolute;
}

#hierarchy .content {
    inline-size: 100%;
    block-size: 100%;
    background-color: var(--medium-emphasis-surface-color);
}

#hierarchy .content .toolbar {
    background-color: transparent;
}

#hierarchy .content .toolbar .title {
    visibility: hidden;
}

#hierarchy .content ul {
    flex-grow: 1;
    opacity: 0;
}

#hierarchy .button[variant="fab"] {
    inset-inline-end: calc(var(--keyline) + 28px);
    inset-block-end: calc(48px + var(--keyline) + 28px);
    translate: 50% 50%;
}

#hierarchy .content .overlay[variant="status-bar"] {
    background-color: var(--status-bar-background-color);
}

#hierarchy .application>.overlay[variant="states"] {
    --states-base-color: var(--primary-color);
    --ripple-opacity: 0.13;
    z-index: 6;
    block-size: 72px;
}

#hierarchy [play="on"] {
    animation-duration: 4s;
}

#hierarchy [play="on"] .application>.overlay[variant="states"] {
    block-size: 100%;
    clip-path: inset(200px 0px 368px 0px);
    animation-name: expand_clipPath;
    animation-duration: 400ms;
    animation-delay: 1s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#hierarchy [play="on"] .application>.overlay[variant="states"]::before {
    --custom-opacity: var(--ripple-opacity);
    animation-name: toOpaque, toTransparent;
    animation-duration: 120ms, 480ms;
    animation-delay: 600ms, 720ms;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#hierarchy [play="on"] .application>.overlay[variant="states"] .ripple {
    translate: 0px -80px;
    animation-name: toExpand_scale, toTransparent, hiddenhiddenToVisible;
    animation-duration: 800ms, 400ms, 800ms;
    animation-delay: 600ms;
    animation-timing-function: var(--ripple-expand-curve), linear, linear;
    animation-fill-mode: forwards, forwards, backwards;
}

#hierarchy [play="on"] .toolbar .overlay[variant="states"] .ripple {
    --custom-opacity: var(--ripple-opacity);
    animation-name: toExpand_scale, toOpaque, toTransparent;
    animation-duration: var(--exit-duration), 120ms, calc(1000ms / 3);
    animation-delay: 2.675s, 2.675s, 2.795s;
    animation-timing-function: var(--ripple-expand-curve), linear, linear;
    animation-fill-mode: both;
}

#hierarchy [play="on"] .group>.tile:nth-of-type(4) {
    animation-name: tileMoveUp, toMoveClear;
    animation-duration: 400ms, 350ms;
    animation-delay: 1s, 3s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes tileMoveUp {
    100% {
        translate: 0px -110px;
    }
}

#hierarchy [play="on"] .group>.tile:nth-of-type(4) .thumbnail,
#hierarchy [play="on"] .group>.tile:nth-of-type(4) .primary span,
#hierarchy [play="on"] .group>.tile:nth-of-type(4) .secondary {
    animation-name: toTransparent, toOpaque;
    animation-duration: 150ms, 200ms;
    animation-delay: 1s, 3.1s;
    animation-timing-function: var(--acceleration-curve), var(--deceleration-curve);
    animation-fill-mode: forwards;
}

#hierarchy [play="on"] .group>.tile:nth-of-type(4) .primary {
    animation-name: toHeadline, toSubheading;
    animation-duration: 250ms, 200ms;
    animation-delay: 1s, 3.1s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toHeadline {
    100% {
        font-size: 1.5rem;
        line-height: var(--headline-leading);
        letter-spacing: 0em;
    }
}

@keyframes toSubheading {
    100% {
        font-size: 1rem;
        line-height: var(--subheading-leading);
        letter-spacing: 0.01em;
    }
}

#hierarchy [play="on"] .view {
    filter: var(--drop-shadow-z0);
    animation-name: surfaceLift, surfaceDrop, hiddenToVisible;
    animation-duration: 400ms, 350ms, 2.35s;
    animation-delay: 1s, 3s, 1s;
    animation-timing-function: var(--deceleration-curve), var(--sharp-curve), linear;
    animation-fill-mode: forwards, forwards, backwards;
}

@keyframes surfaceLift {
    100% {
        filter: var(--drop-shadow-z4);
    }
}

@keyframes surfaceDrop {
    100% {
        filter: var(--drop-shadow-z0);
    }
}

#hierarchy [play="on"] .content {
    clip-path: inset(200px 0px 368px 0px);
    animation-name: expand_clipPath, viewShrink;
    animation-duration: 400ms, 350ms;
    animation-delay: 1s, 3s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes expand_clipPath {
    100% {
        clip-path: inset(0px 0px 0px 0px);
    }
}

@keyframes viewShrink {
    100% {
        clip-path: inset(200px 0px 368px 0px);
    }
}

#hierarchy [play="on"] .content .toolbar {
    translate: 0px 120px;
    animation-name: toMoveClear, appBarMoveDown, toTransparent;
    animation-duration: 400ms, 350ms, 150ms;
    animation-delay: 1s, 3s, 3s;
    animation-timing-function: var(--standard-curve), var(--standard-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes appBarMoveDown {
    100% {
        translate: 0px 120px;
    }
}

#hierarchy [play="on"] .content ul {
    translate: 0px 106px;
    animation-name: toMoveClear, toOpaque, listMoveDown, toTransparent;
    animation-duration: 400ms, 300ms, 350ms, 150ms;
    animation-delay: 1s, 1.1s, 3s, 3s;
    animation-timing-function: var(--standard-curve), var(--deceleration-curve), var(--standard-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes listMoveDown {
    100% {
        translate: 0px 106px;
    }
}

#hierarchy [play="on"] .content hr,
#hierarchy [play="on"] .content>.tile {
    opacity: 0;
    translate: 0px 48px;
    animation-name: toMoveClear, toOpaque, botttomBarMoveDown, toTransparent;
    animation-duration: 400ms, 300ms, 350ms, 150ms;
    animation-delay: 1s, 1.1s, 3s, 3s;
    animation-timing-function: var(--standard-curve), var(--deceleration-curve), var(--standard-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes botttomBarMoveDown {
    100% {
        translate: 0px 48px;
    }
}

#hierarchy [play="on"] .button[variant="fab"] {
    animation-name: toCollapse_inlineSize, fabExpand;
    animation-duration: 150ms, 200ms;
    animation-delay: 1s, 3.1s;
    animation-timing-function: var(--sharp-curve), var(--deceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes fabExpand {
    100% {
        inline-size: 56px;
    }
}

#hierarchy [play="on"] .button[variant="fab"] cmd-icon {
    animation-name: toCollapse_scale, toTransparent, toExpand_scale, toOpaque;
    animation-duration: 150ms, 150ms, 200ms, 200ms;
    animation-delay: 1s, 1s, 3.1s, 3.1s;
    animation-timing-function: var(--sharp-curve), linear, var(--deceleration-curve), linear;
    animation-fill-mode: forwards;
}

#hierarchy [play="on"] .system .status {
    animation-name: statusBarColorToDark, statusBarColorToLight;
    animation-duration: 150ms;
    animation-delay: 1.2s, 3s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

@keyframes statusBarColorToDark {
    100% {
        color: rgb(0 0 0 / 0.6);
    }
}

@keyframes statusBarColorToLight {
    100% {
        color: rgb(255 255 255 / 0.9);
    }
}

@media (prefers-color-scheme: dark) {
    #hierarchy [play="on"] .system .status {
        animation: none;
    }
}

#hierarchy [play="on"] .scrim {
    visibility: visible;
    opacity: 0;
    animation-name: scrimAppear, toTransparent;
    animation-duration: 400ms, 300ms;
    animation-delay: 1s, 3s;
    animation-timing-function: linear;
    animation-fill-mode: both;
}

@keyframes scrimAppear {
    100% {
        opacity: 0.4;
    }
}

#result [play="on"] .menu {
    inline-size: calc(3 * var(--increment) * cos(var(--θ)));
    block-size: calc(4 * 48px * (1 + sin(var(--θ))));
    padding-block: calc(8px * (1 + sin(var(--θ))));
    opacity: 0;
}

#result [play="on"] {
    animation-duration: 3s;
}

#result [play="on"] .overlay[variant="states"] .ripple {
    --custom-opacity: var(--ripple-opacity);
    animation-name: toExpand_scale, toOpaque, toTransparent;
    animation-duration: var(--exit-duration), 120ms, calc(1000ms / 3);
    animation-delay: 325ms, 325ms, 445ms;
    animation-timing-function: var(--ripple-expand-curve), linear, linear;
    animation-fill-mode: both;
}

#result [play="on"] .menu {
    animation-name: menuExpand, toOpaque, toTransparent, hiddenToVisible;
    animation-duration: 300ms, 150ms, 200ms, 2.5s;
    animation-delay: 0.5s, 0.5s, 2.5s, 0.5s;
    animation-timing-function: var(--deceleration-curve), var(--deceleration-curve), var(--acceleration-curve), linear;
    animation-fill-mode: both;
}

@keyframes menuExpand {
    100% {
        --θ: 0deg;
        translate: -8px 8px;
    }
}

#output [play="on"] {
    animation-duration: 3s;
}

#output [play="on"] .overlay[variant="states"]::before {
    --custom-opacity: var(--ripple-opacity);
    animation-name: toOpaque, toTransparent;
    animation-duration: 120ms, 480ms;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#output [play="on"] .tile:nth-child(3) .overlay[variant="states"]::before {
    animation-delay: 0.5s, 0.62s;
}

#output [play="on"] .tile:nth-child(5) .overlay[variant="states"]::before {
    animation-delay: 1s, 1.12s;
}

#output [play="on"] .tile:nth-child(7) .overlay[variant="states"]::before {
    animation-delay: 1.5s, 1.62s;
}

#output [play="on"] .tile:nth-child(9) .overlay[variant="states"]::before {
    animation-delay: 2s, 2.12s;
}

#output [play="on"] .overlay[variant="states"] .ripple {
    visibility: visible;
    animation-name: toExpand_scale, output_rippleForegroundMove, toTransparent;
    animation-duration: 800ms, 300ms, 400ms;
    animation-timing-function: var(--ripple-expand-curve), var(--ripple-expand-curve), linear;
    animation-fill-mode: both;
}

#output [play="on"] .tile:nth-child(3) .ripple {
    --offset-x: 48px;
    --offset-y: 16px;
    animation-delay: 0.5s;
}

#output [play="on"] .tile:nth-child(5) .ripple {
    --offset-x: 32px;
    --offset-y: 8px;
    animation-delay: 1s;
}

#output [play="on"] .tile:nth-child(7) .ripple {
    --offset-x: 40px;
    --offset-y: -8px;
    animation-delay: 1.5s;
}

#output [play="on"] .tile:nth-child(9) .ripple {
    --offset-x: 56px;
    --offset-y: 24px;
    animation-delay: 2s;
}

@keyframes output_rippleForegroundMove {
    0% {
        translate: var(--offset-x) var(--offset-y);
    }

    100% {
        translate: calc(var(--offset-x) * 0.7) calc(var(--offset-y) * 0.7);
    }
}

#hint .glow .item {
    visibility: hidden;
    inset-block: 0;
    inline-size: 53.58983848622455px;
    justify-content: end;
    align-items: center;
    transform-origin: left center;
}

#hint .glow .item::after {
    inline-size: calc(400px * 2);
}

#hint .touch {
    visibility: hidden;
    inset-block-end: 32px;
    justify-self: center;
    align-self: center;
    translate: -120px;
}

#hint [play="on"] {
    animation-duration: 4s;
}

#hint [play="on"] .glow .item {
    animation-name: glowExpand, glowShrink, hiddenToVisible;
    animation-duration: 1.5s, 0.6s, 3s;
    animation-delay: 0.7s, 2.2s, 0.7s;
    animation-timing-function: cubic-bezier(0.2, 0, 0.2, 1), var(--deceleration-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes glowExpand {
    0% {
        scale: 0 1;
        opacity: 0.09;
    }
}

@keyframes glowShrink {
    100% {
        scale: 0 1;
        opacity: 0;
    }
}

#hint [play="on"] .touch {
    animation-name: touchIn, hintTouchMove, touchOut, hiddenToVisible;
    animation-duration: 0.4s, 1.5s, 0.2s, 3s;
    animation-delay: 0.5s, 0.7s, 2.2s, 0.5s;
    animation-timing-function: var(--deceleration-curve), var(--standard-curve), var(--acceleration-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes hintTouchMove {
    0% {
        translate: -120px;
    }

    100% {
        translate: 120px;
    }
}

#hint [play="on"] .touch::after,
#hint [play="on"] .touch::before {
    animation-name: innerExpand, innerShrink;
    animation-duration: 0.4s, 0.2s;
    animation-delay: 0.5s, 2.2s;
    animation-timing-function: var(--deceleration-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes innerExpand {
    0% {
        border-width: 0px;
    }
}

@keyframes innerShrink {
    100% {
        border-width: 0px;
    }
}

#progress .touch {
    visibility: hidden;
    inset-inline-start: 80px;
    justify-self: center;
    align-self: center;
    translate: 0px -180px;
}

#progress .swipe-refresh {
    visibility: hidden;
}

#progress [play="on"] {
    animation-duration: 9s;
}

#progress [play="on"] .touch {
    animation-name: touchIn, progressTouchMove, touchOut, hiddenToVisible;
    animation-duration: 0.4s, 2s, 0.2s, 3s;
    animation-delay: 0.5s, 0.7s, 2.7s, 0.5s;
    animation-timing-function: var(--deceleration-curve), var(--standard-curve), var(--acceleration-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes progressTouchMove {
    0% {
        translate: 0px -180px;
    }

    100% {
        translate: 0px 200px;
    }
}

#progress [play="on"] .touch::after,
#progress [play="on"] .touch::before {
    animation-name: innerExpand, innerShrink;
    animation-duration: 0.4s, 0.2s;
    animation-delay: 0.5s, 2.7s;
    animation-timing-function: var(--deceleration-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

#progress [play="on"] .swipe-refresh {
    animation-name: fromCollapse_size, swipeRefreshMoveDown, swipeRefreshMoveUp, toCollapse_size, hiddenToVisible;
    animation-duration: 0.75s, 2s, 300ms, 150ms, 3s;
    animation-delay: 0.7s, 0.7s, 2.7s, 7.85s, 0.7s;
    animation-timing-function: var(--standard-curve), var(--standard-curve), var(--deceleration-curve), var(--acceleration-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes swipeRefreshMoveDown {
    0% {
        inset-block-start: 100px;
    }

    100% {
        inset-block-start: calc(1.5 * var(--increment) + 100px);
    }
}

@keyframes swipeRefreshMoveUp {
    100% {
        inset-block-start: calc(24px + 100px);
    }
}

#progress [play="on"] .swipe-refresh svg {
    animation-name: fromTransparent, swipeRefreshRotateForward, swipeRefreshRotateBack, indicatorWholeRotate, toTransparent;
    animation-duration: 0.75s, 2s, 200ms, calc(16s/3), 150ms;
    animation-delay: 0.7s, 0.7s, 2.7s, 2.9s, 7.85s;
    animation-timing-function: linear, var(--standard-curve), var(--deceleration-curve), linear, var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes swipeRefreshRotateForward {
    100% {
        rotate: 290deg;
    }
}

@keyframes swipeRefreshRotateBack {
    100% {
        rotate: 360deg;
    }
}

@keyframes indicatorWholeRotate {
    0% {
        rotate: -20deg;
    }

    100% {
        rotate: 1060deg;
    }
}

#progress [play="on"] .swipe-refresh svg circle {
    animation-name:
        swipeRefreshExpand,
        swipeRefreshCollapse,
        indicatorExpand,
        indicatorCollapse,
        indicatorRotate1,
        indicatorExpand,
        indicatorCollapse,
        indicatorRotate2,
        indicatorExpand,
        indicatorCollapse,
        indicatorRotate3,
        indicatorExpand,
        indicatorCollapse,
        indicatorRotate4;
    animation-duration:
        0.75s,
        200ms,
        calc(2s / 3),
        calc(2s / 3),
        calc(4s / 3),
        calc(2s / 3),
        calc(2s / 3),
        calc(4s / 3),
        calc(2s / 3),
        calc(2s / 3),
        calc(4s / 3),
        calc(2s / 3),
        calc(2s / 3),
        calc(4s / 3);
    animation-delay:
        0.7s,
        2.7s,
        2.9s,
        calc(2.9s + 2s / 3),
        2.9s,
        calc(2.9s + 4s / 3),
        calc(2.9s + 6s / 3),
        calc(2.9s + 4s / 3),
        calc(2.9s + 8s / 3),
        calc(2.9s + 10s / 3),
        calc(2.9s + 8s / 3),
        calc(2.9s + 12s / 3),
        calc(2.9s + 14s / 3),
        calc(2.9s + 12s / 3);
    animation-timing-function:
        var(--standard-curve),
        var(--deceleration-curve),
        var(--standard-curve),
        var(--standard-curve),
        linear,
        var(--standard-curve),
        var(--standard-curve),
        linear,
        var(--standard-curve),
        var(--standard-curve),
        linear,
        var(--standard-curve),
        var(--standard-curve),
        linear;
    animation-fill-mode: forwards;
}

@keyframes swipeRefreshExpand {
    100% {
        stroke-dasharray: 0 0 288 360;
    }
}

@keyframes swipeRefreshCollapse {
    100% {
        stroke-dasharray: 0 340 20 360;
    }
}

@keyframes indicatorExpand {
    0% {
        stroke-dasharray: 0 0 20 360;
    }

    100% {
        stroke-dasharray: 0 0 270 360;
    }
}

@keyframes indicatorCollapse {
    0% {
        stroke-dasharray: 0 0 270 360;
    }

    100% {
        stroke-dasharray: 0 250 20 360;
    }
}

@keyframes indicatorRotate1 {
    0% {
        rotate: -90deg;
    }

    100% {
        rotate: -70deg;
    }
}

@keyframes indicatorRotate2 {
    0% {
        rotate: -180deg;
    }

    100% {
        rotate: -160deg;
    }
}

@keyframes indicatorRotate3 {
    0% {
        rotate: -270deg;
    }

    100% {
        rotate: -250deg;
    }
}

@keyframes indicatorRotate4 {
    0% {
        rotate: -360deg;
    }

    100% {
        rotate: -340deg;
    }
}

#progress [play="on"] .swipe-refresh svg path {
    animation-name: swipeRefreshArrowExpand, swipeRefreshArrowShrink;
    animation-duration: 0.75s, 200ms;
    animation-delay: 0.7s, 2.7s;
    animation-timing-function: var(--standard-curve), var(--deceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes swipeRefreshArrowExpand {
    100% {
        d: path("M 20 6.25 L 25 11.25 L 20 16.25 Z");
        rotate: 288deg;
    }
}

@keyframes swipeRefreshArrowShrink {
    100% {
        d: path("M 20 11.25 L 20 11.25 L 20 11.25 Z");
        rotate: 360deg;
    }
}

#focus [play="on"] {
    animation-duration: 2s;
}

#focus [play="on"] :is(.hint, .clock) {
    animation-duration:
        250ms,
        calc(450ms * 0.314937),
        calc(450ms * (0.487430 - 0.314937)),
        calc(450ms * (0.659917 - 0.487430)),
        calc(450ms * (0.759486 - 0.659917)),
        calc(450ms * (0.859094 - 0.759486)),
        calc(450ms * (0.929538 - 0.859094)),
        calc(450ms * (1 - 0.929538));
    animation-delay:
        500ms,
        750ms,
        calc(750ms + 450ms * 0.314937),
        calc(750ms + 450ms * 0.487430),
        calc(750ms + 450ms * 0.659917),
        calc(750ms + 450ms * 0.759486),
        calc(750ms + 450ms * 0.859094),
        calc(750ms + 450ms * 0.929538);
    animation-timing-function:
        var(--standard-curve),
        cubic-bezier(0.57, 0, 1, 1),
        cubic-bezier(0, 0, 0.43, 1),
        cubic-bezier(0.57, 0, 1, 1),
        cubic-bezier(0, 0, 0.43, 1),
        cubic-bezier(0.57, 0, 1, 1),
        cubic-bezier(0, 0, 0.43, 1),
        cubic-bezier(0.57, 0, 1, 1);
    animation-fill-mode: forwards;
}

#focus [play="on"] .hint {
    animation-name: jump1, toMoveClear, jump2, toMoveClear, jump3, toMoveClear, jump4, toMoveClear;
}

@keyframes jump1 {
    100% {
        translate: 0px -75px;
    }
}

@keyframes jump2 {
    100% {
        translate: 0px calc(-75px * 0.3);
    }
}

@keyframes jump3 {
    100% {
        translate: 0px calc(-75px * 0.1);
    }
}

@keyframes jump4 {
    100% {
        translate: 0px calc(-75px * 0.05);
    }
}

#focus [play="on"] .clock {
    animation-name: back1, pop, back2, pop, back3, pop, back4, pop;
}

@keyframes back1 {
    100% {
        scale: 0.85;
        opacity: 0.75;
    }
}

@keyframes back2 {
    100% {
        scale: calc(1 - 0.15 * 0.3);
        opacity: calc(1 - 0.2 * 0.3);
    }
}

@keyframes back3 {
    100% {
        scale: calc(1 - 0.15 * 0.1);
        opacity: calc(1 - 0.2 * 0.1);
    }
}

@keyframes back4 {
    100% {
        scale: calc(1 - 0.15 * 0.05);
        opacity: calc(1 - 0.2 * 0.05);
    }
}

@keyframes pop {
    100% {
        scale: 1;
        opacity: 1;
    }
}

#focus [play="on"] .actions .button:nth-child(2) {
    animation-name: toOpaque, appearToCustom;
    animation-duration: 150ms;
    animation-delay: 0.5s, 0.75s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes appearToCustom {
    100% {
        opacity: 0.5;
    }
}

#polish [play="on"] {
    animation-duration: 6s;
}

#polish [play="on"] .actions>div .ripple {
    --custom-opacity: var(--ripple-opacity);
    visibility: visible;
    animation-name: toExpand_scale, toOpaque, toTransparent;
    animation-duration: var(--exit-duration), 120ms, calc(1000ms / 3);
    animation-timing-function: var(--ripple-expand-curve), linear, linear;
    animation-fill-mode: both;
}

#polish [play="on"] .like .ripple {
    animation-delay: 0.5s, 0.5s, 0.62s;
}

#polish [play="on"] .view .ripple {
    animation-delay: 2s, 2s, 2.12s;
}

#polish [play="on"] .share .ripple {
    animation-delay: 4.5s, 4.5s, 4.62s;
}

#polish [play="on"] .like svg path {
    transform-origin: center;
    animation-name: heartBeat, heartBeat;
    animation-duration: 250ms;
    animation-delay: 0.5s, 1s;
    animation-timing-function: var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes heartBeat {
    40% {
        scale: 1.2;
    }

    100% {
        scale: 1;
    }
}

@property --pupil-tx {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}

@property --pupil-ty {
    syntax: "<length>";
    inherits: false;
    initial-value: 0px;
}

#polish [play="on"] #visibility-mask>circle:last-of-type {
    transform-origin: center;
    translate: var(--pupil-tx) var(--pupil-ty);
    animation-name: pupilMove1, pupilMove2, pupilMove3;
    animation-duration: 200ms, 150ms, 200ms;
    animation-delay: 2s, 2.8s, 3.8s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes pupilMove1 {
    50% {
        --pupil-ty: -2px;
    }

    75% {
        --pupil-tx: 2px;
        --pupil-ty: -2px;
    }

    100% {
        --pupil-tx: 2px;
        --pupil-ty: -2px;
    }
}

@keyframes pupilMove2 {
    100% {
        --pupil-tx: -2px;
    }
}

@keyframes pupilMove3 {
    50% {
        --pupil-ty: 0px;
    }

    75% {
        --pupil-tx: 0px;
        --pupil-ty: 0px;
    }

    100% {
        --pupil-tx: 0px;
        --pupil-ty: 0px;
    }
}

#polish [play="on"] #share-mask :is(path, circle) {
    transform-origin: center;
    animation-duration: 120ms, 150ms, 250ms;
    animation-delay: 4.5s, 4.95s, 5.2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#polish [play="on"] #share-mask>path:first-of-type {
    animation-name: lineCollapse, upLineMove1, upLineMove2;
}

#polish [play="on"] #share-mask>path:last-of-type {
    animation-name: lineCollapse, downLineMove;
    animation-duration: 120ms, 250ms;
    animation-delay: 4.5s, 5.2s;
}

#polish [play="on"] #share-mask>circle:nth-of-type(1) {
    animation-name: circleCollapse, topCircleMoveStart, topCircleMoveFinal;
}

#polish [play="on"] #share-mask>circle:nth-of-type(2) {
    animation-name: circleCollapse, middleBottomCircleMove, middleCircleMoveFinal;
}

#polish [play="on"] #share-mask>circle:nth-of-type(3) {
    animation-name: circleCollapse, middleBottomCircleMove, bottomCircleMoveFinal;
}

@keyframes lineCollapse {
    100% {
        d: path("M 12 12 L 12 12");
    }
}

@keyframes upLineMove1 {
    100% {
        d: path("M 6 5 L 18 12");
    }
}

@keyframes upLineMove2 {
    100% {
        d: path("M 18 5 L 6 12");
    }
}

@keyframes downLineMove {
    0% {
        d: path("M 18 12 L 18 12");
    }

    100% {
        d: path("M 6 12 L 18 19");
    }
}

@keyframes circleCollapse {
    100% {
        cx: 12;
        cy: 12;
    }
}

@keyframes topCircleMoveStart {
    100% {
        cx: 6;
        cy: 5;
    }
}

@keyframes middleBottomCircleMove {
    100% {
        cx: 18;
        cy: 12;
    }
}

@keyframes topCircleMoveFinal {
    100% {
        cx: 18;
    }
}

@keyframes middleCircleMoveFinal {
    100% {
        cx: 6;
    }
}

@keyframes bottomCircleMoveFinal {
    100% {
        cy: 19;
    }
}

#brand #creamy-pesto-pasta .recipe>*:not(.name),
#brand .details .tab-bar .item[activated]::after,
#brand .details ul {
    opacity: 0;
}

#brand .overlay[variant="states"] {
    --states-base-color: var(--primary-color);
    --ripple-opacity: 0.13;
}

#brand [play="on"] {
    animation-duration: 10s;
}

#brand [play="on"] .view {
    animation-name: viewMoveLeft, toMoveClear;
    animation-duration: 1s, 1s;
    animation-delay: 0.5s, 8.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes viewMoveLeft {
    100% {
        translate: -100%;
    }
}

#brand [play="on"] #creamy-pesto-pasta {
    animation-name: viewMoveLeft, scaleDown, toExpand_scale, toMoveClear;
    animation-duration: 1s, 500ms, 1s, 1s;
    animation-delay: 0.5s, 3.5s, 5s, 8.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes scaleDown {
    100% {
        scale: 0.75;
    }
}

#brand [play="on"] #pot-pie img {
    animation-name: imageParalleP, toMoveClear;
    animation-duration: 1s;
    animation-delay: 0.5s, 8.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes imageParalleP {
    100% {
        translate: 25%;
    }
}

#brand [play="on"] #pot-pie .recipe {
    animation-name: recipeParalleP, toMoveClear;
    animation-duration: 1s;
    animation-delay: 0.5s, 8.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes recipeParalleP {
    100% {
        translate: -25%;
    }
}

#brand [play="on"] #creamy-pesto-pasta img {
    translate: -25%;
    animation-name: toMoveClear, recipeParalleP;
    animation-duration: 1s;
    animation-delay: 0.5s, 8.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#brand [play="on"] .title {
    animation-name: recipeParalle, toMoveClear;
    animation-duration: 1s;
    animation-delay: 1.75s, 6.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#brand [play="on"] #creamy-pesto-pasta .recipe {
    z-index: 2;
    translate: 25%;
    animation-name: toMoveClear, recipeParalle, toMoveClear, imageParalleP;
    animation-duration: 1s;
    animation-delay: 0.5s, 1.75s, 6.5s, 8.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes recipeParalle {
    100% {
        translate: 0% calc(0px - 360px - 16px);
    }
}

#brand [play="on"] #creamy-pesto-pasta .image::after {
    content: "";
    inset: 0;
    position: absolute;
    inline-size: 100%;
    block-size: 100cqb;
    background-color: var(--basil-green-500);
    translate: 0px calc(360px - 2 * 32px);
    animation-name: imageOverlayUp, imageOverlayBack;
    animation-duration: 0.75s;
    animation-delay: 1.75s, 6.75s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes imageOverlayUp {
    100% {
        translate: 0px calc(0px - 56px - 32px - 24px);
    }
}

@keyframes imageOverlayBack {
    100% {
        translate: 0px calc(360px - 2 * 32px);
    }
}

#brand [play="on"] #creamy-pesto-pasta::after {
    content: "";
    z-index: 1;
    inset: 0;
    position: absolute;
    background-color: var(--basil-orange-50);
    translate: 0px calc(80px + 360px - 32px);
    opacity: 0.87;
    animation-name: toMoveClear, surfaceOverlayBack;
    animation-duration: 0.75s;
    animation-delay: 1.75s, 6.75s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes surfaceOverlayBack {
    100% {
        translate: 0px calc(80px + 360px - 32px);
    }
}

#brand [play="on"] cmd-icon[name="basil_expand_more"] {
    animation-name: iconMoveUp, toTransparent, toMoveClear, toOpaque;
    animation-duration: 1s, 200ms, 1s, 500ms;
    animation-delay: 1.75s, 1.75s, 6.5s, 7s;
    animation-timing-function: var(--standard-curve), linear, var(--standard-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes iconMoveUp {
    100% {
        translate: 0px -50cqb;
    }
}

#brand [play="on"] #creamy-pesto-pasta .recipe>*:not(.name) {
    animation-name: toOpaque, toTransparent;
    animation-duration: 625ms, 400ms;
    animation-delay: 2.125s, 6.5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#brand [play="on"] .details {
    animation-name: detailsShow, detailsMoveUp, detailsMoveBack, detailsHide;
    animation-duration: 1s, 500ms, 1s, 1s;
    animation-delay: 1.75s, 3.5s, 5s, 6.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes detailsShow {
    0% {
        translate: 0px calc(640px - 56px - 48px);
    }

    100% {
        translate: 0px calc(0px - 56px - 48px);
    }
}

@keyframes detailsMoveUp {
    100% {
        translate: 0% calc(-100% + var(--status-bar-block-size));
        box-shadow: var(--shadow-z2);
    }
}

@keyframes detailsMoveBack {
    100% {
        translate: 0px calc(0px - 56px - 48px);
        box-shadow: var(--shadow-z0);
    }
}

@keyframes detailsHide {
    100% {
        translate: 0px calc(640px - 56px - 48px);
    }
}

#brand [play="on"] .details>.divider:first-child {
    animation-name: toTransparent, toOpaque;
    animation-duration: 200ms, 200ms;
    animation-delay: 3.5s, 5.3s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#brand [play="on"] .tab-bar .item[activated] span {
    animation-name: toBold, toMedium;
    animation-duration: 250ms, 300ms;
    animation-delay: 3.5s, 5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toBold {
    100% {
        font-weight: 700;
    }
}

@keyframes toMedium {
    100% {
        font-weight: 500;
    }
}

#brand [play="on"] .tab-bar .item[activated]::after {
    animation-name: toOpaque, toTransparent;
    animation-duration: 250ms, 300ms;
    animation-delay: 3.5s, 5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#brand [play="on"] .details ul {
    animation-name: toOpaque, toTransparent;
    animation-duration: 400ms, 300ms;
    animation-delay: 3.6s, 5s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#brand [play="on"] .details .overlay[variant="states"]::before {
    --custom-opacity: var(--ripple-opacity);
    animation-name: toOpaque, toTransparent;
    animation-duration: 120ms, 480ms;
    animation-delay: 3.25s, 3.37s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#brand [play="on"] .details .overlay[variant="states"] .ripple {
    animation-name: toExpand_scale, toTransparent, hiddenToVisible;
    animation-duration: 800ms, 400ms, 800ms;
    animation-delay: 3.25s;
    animation-timing-function: var(--ripple-expand-curve), linear, linear;
    animation-fill-mode: forwards, forwards, backwards;
}

#distance,
#area,
#speed figure {
    grid-column-end: span min(var(--content-columns), 2);
}

#distance .diagram {
    block-size: 360px;
    flex-direction: column;
    align-items: stretch;
    padding-block: 60px;
}

#distance .group {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
}

#distance .line {
    position: relative;
    inline-size: 55%;
    block-size: 16px;
    display: flex;
    align-items: center;
    border-inline: 2px solid var(--divider-color);
    box-sizing: border-box;
}

#distance .line::before {
    content: "";
    flex-grow: 1;
    block-size: 2px;
    background-color: var(--divider-color);
}

@property --duration {
    syntax: "<integer>";
    inherits: true;
    initial-value: 0;
}

#distance .time {
    display: block;
    inline-size: 15%;
    direction: rtl;
    color: var(--secondary-text-color);
}

#distance .group:first-child .time::before {
    counter-reset: duration-a var(--duration);
    content: counter(duration-a);
}

#distance .group:last-child .time::before {
    counter-reset: duration-b var(--duration);
    content: counter(duration-b);
}

#distance .surface {
    position: absolute;
    inline-size: 0px;
    aspect-ratio: 1 / 1;
    background-color: var(--high-emphasis-surface-color);
    border-radius: 50%;
    box-shadow: var(--shadow-z4);
    translate: -50%;
}

#distance [play="on"] {
    animation-duration: 4.5s;
}

#distance [play="on"] .group:first-child .time::before {
    animation-name: duration1Grow, durationClear;
    animation-duration: 300ms, 150ms;
    animation-delay: 1s, 3.5s;
    animation-timing-function: linear, step-start;
    animation-fill-mode: forwards;
}

@keyframes duration1Grow {
    100% {
        --duration: 300;
    }
}

@keyframes durationClear {
    100% {
        --duration: 0;
    }
}

#distance [play="on"] .group:first-child .surface {
    animation-name: surfaceGrow, surface1Move, toCollapse_inlineSize;
    animation-duration: 200ms, 300ms, 150ms;
    animation-delay: 0.5s, 1s, 3.5s;
    animation-timing-function: var(--deceleration-curve), var(--standard-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes surfaceGrow {
    100% {
        inline-size: 40px;
    }
}

@keyframes surface1Move {
    100% {
        translate: calc(-50% + 27.5cqi);
    }
}

#distance [play="on"] .group:last-child .time::before {
    animation-name: duration2Grow, durationClear;
    animation-duration: 400ms, 150ms;
    animation-delay: 2.25s, 3.5s;
    animation-timing-function: linear, step-start;
    animation-fill-mode: forwards;
}

@keyframes duration2Grow {
    100% {
        --duration: 400;
    }
}

#distance [play="on"] .group:last-child .surface {
    animation-name: surfaceGrow, surface2Move, toCollapse_inlineSize;
    animation-duration: 200ms, 400ms, 150ms;
    animation-delay: 1.75s, 2.25s, 3.5s;
    animation-timing-function: var(--deceleration-curve), var(--standard-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes surface2Move {
    100% {
        translate: calc(-50% + 55cqi);
    }
}

#area .diagram {
    block-size: 360px;
    align-items: stretch;
    padding: 40px 60px;
}

#area .group {
    flex-grow: 1;
    display: grid;
    grid-template-rows: 1fr min-content;
    place-items: center;
    row-gap: 40px;
}

#area .time {
    color: var(--secondary-text-color);
}

#area .panel {
    inline-size: 256px;
    block-size: 48px;
    display: flex;
    flex-direction: column;
    align-items: end;
    color: var(--secondary-text-color);
    background-color: var(--medium-emphasis-surface-color);
    border-radius: 2px;
    box-shadow: var(--shadow-z2);
}

#area .panel .divider {
    visibility: hidden;
}

#area .panel svg {
    inline-size: 1.5rem;
    block-size: 1.5rem;
}

#area [play="on"] {
    animation-duration: 6s;
}

#area [play="on"] .switch .track {
    animation-name: switchTrackOn, switchTrackOff;
    animation-duration: 250ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes switchTrackOn {
    100% {
        background-color: var(--blue-500);
        opacity: 0.5;
    }
}

@keyframes switchTrackOff {
    100% {
        background-color: var(--switch-off-track-color);
        opacity: 1;
    }
}

#area [play="on"] .switch .thumb {
    animation-name: switchThumbOn, switchThumbOff;
    animation-duration: 250ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes switchThumbOn {
    100% {
        background-color: var(--blue-500);
        translate: 10px;
    }
}

@keyframes switchThumbOff {
    100% {
        background-color: var(--switch-off-thumb-color);
        translate: -10px;
    }
}

#area [play="on"] .panel {
    animation-name: panelExpand, panelShrink;
    animation-duration: 350ms, 300ms;
    animation-delay: 3.5s, 5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes panelExpand {
    100% {
        block-size: calc(4 * 48px);
    }
}

@keyframes panelShrink {
    100% {
        block-size: 48px;
    }
}

#area [play="on"] .divider {
    animation-name: hiddenToVisible;
    animation-duration: 2s;
    animation-delay: 3.5s;
    animation-timing-function: step-start;
    animation-fill-mode: none;
}

#area [play="on"] .panel svg path {
    animation-name: expandToLessIcon, expandToMoreIcon;
    animation-duration: 350ms, 300ms;
    animation-delay: 3.5s, 5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes expandToLessIcon {
    100% {
        d: path("M 6 8 L 12 2 L 18 8 L 16.585786437626904 9.414213562373096 L 12 4.82842712474619 L 7.414213562373095 9.414213562373096 Z");
    }
}

@keyframes expandToMoreIcon {
    100% {
        d: path("M 7.414213562373095 2.585786437626905 L 12 7.17157287525381 L 16.585786437626904 2.585786437626905 L 18 4 L 12 10 L 6 4 Z");
    }
}

#speed .diagram {
    block-size: 360px;
    align-items: stretch;
    padding: 60px 40px 40px 40px;
    color: var(--secondary-text-color);
}

#speed .graph span:first-of-type {
    grid-area: a;
    writing-mode: vertical-lr;
}

#speed .graph {
    flex-grow: 1;
    display: grid;
    grid-template-columns: max-content 1fr;
    grid-template-rows: 1fr max-content;
    grid-template-areas:
        "a b"
        ". c";
    justify-content: initial;
    place-items: center;
    gap: 24px;
    margin-inline-end: 40px;
    color: var(--secondary-text-color);
}

#speed svg {
    color: var(--divider-color);
}

#speed svg:first-of-type {
    display: none;
}

:is(#easing, #linear) line:last-of-type,
:is(#easing, #asymmetric) path,
:is(#standard, #deceleration, #acceleration, #sharp) path:last-of-type {
    clip-path: inset(100% 0% 0% 0%);
}

#easing line:last-of-type,
#asymmetric path:nth-last-of-type(2) {
    color: var(--yellow-800);
}

:is(#easing, #asymmetric) path:last-of-type {
    color: var(--green-500);
}

:is(#standard, #deceleration, #acceleration, #sharp) path:last-of-type,
#linear line:last-of-type {
    color: var(--blue-500);
}

#speed .graph span:last-of-type {
    grid-area: c;
}

#speed .demo {
    inline-size: 200px;
    display: grid;
    grid-template-rows: 1fr 48px;
    place-items: center;
}

:is(#easing, #asymmetric) .demo {
    inline-size: 100px;
    grid-template-rows: 1fr min-content;
    gap: 24px;
}

#speed .surface {
    position: relative;
    inline-size: 32px;
    aspect-ratio: 1 / 1;
    background-color: var(--blue-500);
    border-radius: 50%;
    box-shadow: var(--shadow-z4);
    translate: 0px 106px;
}

#deceleration .surface {
    visibility: hidden;
    translate: 0px calc(100cqb - 50px);
}

:is(#easing, #asymmetric) .demo:nth-last-child(2) .surface {
    background-color: var(--yellow-800);
}

:is(#easing, #asymmetric) .demo:nth-last-child(1) .surface {
    background-color: var(--green-500);
}

:is(#easing, #asymmetric) [play="on"] {
    animation-duration: 6.5s;
}

:is(#standard, #deceleration, #acceleration, #sharp, #linear) [play="on"] {
    animation-duration: 3s;
}

#easing [play="on"] .demo:nth-child(2) .surface,
#linear [play="on"] .surface {
    animation-name: easingDemoMoveUp, easingDemoMoveDown;
    animation-duration: 0.75s;
    animation-delay: 0.5s, 2s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#standard [play="on"] .surface {
    animation-name: easingDemoMoveUp, easingDemoMoveDown;
    animation-duration: 0.75s;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#deceleration [play="on"] .surface {
    animation-name: easingDemoMoveUp, toCollapse_inlineSize, hiddenToVisible;
    animation-duration: 0.75s, 150ms, 1s;
    animation-delay: 0.5s, 2s, 0.5s;
    animation-timing-function: var(--deceleration-curve), var(--acceleration-curve), linear;
    animation-fill-mode: forwards;
}

#acceleration [play="on"] .surface {
    animation-name: easingDemoDisappear, visibleToHidden, fromCollapse_inlineSize;
    animation-duration: 0.75s, 0.75s, 200ms;
    animation-delay: 0.5s, 1.25s, 2s;
    animation-timing-function: var(--acceleration-curve), step-start, var(--deceleration-curve);
    animation-fill-mode: none, none, forwards;
}

@keyframes easingDemoDisappear {
    100% {
        translate: 0px calc(-50cqb - 52px);
    }
}

#sharp [play="on"] .surface {
    animation-name: easingDemoDisappear, visibleToHidden, easingDemoMoveDown;
    animation-duration: 0.75s, 0.75s, 0.75s;
    animation-delay: 0.5s, 1.25s, 2s;
    animation-timing-function: var(--sharp-curve), step-start, var(--deceleration-curve);
    animation-fill-mode: forwards, none, forwards;
}

#asymmetric [play="on"] .demo:nth-child(2) .surface {
    animation-name: easingDemoMoveUp, easingDemoMoveDown;
    animation-duration: 0.75s;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--sharp-curve);
    animation-fill-mode: forwards;
}

:is(#easing, #asymmetric) [play="on"] .demo:nth-child(3) .surface {
    animation-name: easingDemoMoveUp, easingDemoMoveDown;
    animation-duration: 0.75s;
    animation-delay: 4s, 5.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes easingDemoMoveUp {
    100% {
        translate: 0px -106px;
    }
}

@keyframes easingDemoMoveDown {
    100% {
        translate: 0px 106px;
    }
}

:is(#easing, #linear) [play="on"] line:last-of-type {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s;
    animation-delay: 0.5s, 2s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#easing [play="on"] path {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s;
    animation-delay: 4s, 5.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#asymmetric [play="on"] path:nth-last-of-type(2) {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--sharp-curve);
    animation-fill-mode: forwards;
}

#asymmetric [play="on"] path:nth-last-of-type(1) {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s;
    animation-delay: 4s, 5.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#standard [play="on"] path:last-of-type {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#deceleration [play="on"] path:last-of-type {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s, 250ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--deceleration-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

#acceleration [play="on"] path:last-of-type {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s, 250ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--acceleration-curve);
    animation-fill-mode: forwards;
}

#sharp [play="on"] path:last-of-type {
    animation-name: curveExpand, curveCollapse;
    animation-duration: 0.75s, 250ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--sharp-curve), var(--acceleration-curve);
    animation-fill-mode: forwards;
}

@keyframes curveExpand {
    100% {
        clip-path: inset(-1% 0% 0% 0%);
    }
}

@keyframes curveCollapse {
    100% {
        clip-path: inset(-1% 0% 101% 0%);
    }
}

@media (width < 920px) {
    #distance .diagram {
        padding: 60px 40px 40px 40px;
    }

    #distance .group {
        flex-direction: column;
        align-items: stretch;
        row-gap: 24px;
    }

    #distance .line {
        inline-size: auto;
    }

    #distance .time {
        align-self: end;
    }

    #distance [play="on"] .group:first-child .time::before {
        animation-duration: 250ms, 150ms;
    }

    #distance [play="on"] .group:first-child .surface {
        animation-duration: 200ms, 250ms, 150ms;
    }

    #distance [play="on"] .group:last-child .time::before {
        animation-duration: 350ms, 150ms;
    }

    #distance [play="on"] .group:last-child .surface {
        animation-duration: 200ms, 350ms, 150ms;
    }

    @keyframes duration1Grow {
        100% {
            --duration: 250;
        }
    }

    @keyframes duration2Grow {
        100% {
            --duration: 350;
        }
    }

    @keyframes surfaceGrow {
        100% {
            inline-size: 32px;
        }
    }
    
    @keyframes surface1Move {
        100% {
            translate: calc(-50% + 50cqi);
        }
    }

    @keyframes surface2Move {
        100% {
            translate: calc(-50% + 100cqi);
        }
    }

    #area .diagram {
        block-size: 480px;
        flex-direction: column;
        padding: 40px;
    }

    #area .group {
        flex-grow: unset;
        row-gap: 0px;
    }

    #area .group:first-child {
        flex-basis: 100%;
    }

    #area .group:last-child {
        flex-basis: 200%;
    }

    @keyframes panelExpand {
        100% {
            block-size: calc(3 * 48px);
        }
    }

    #speed .diagram {
        block-size: 480px;
        flex-direction: column;
        padding: 40px 40px 30px 20px;
    }

    :is(#standard, #deceleration, #acceleration, #sharp, #linear) .diagram {
        block-size: 360px;
    }

    #speed .graph {
        margin-inline-end: 0px;
        gap: 16px;
    }

    #speed svg:first-of-type {
        display: initial;
    }

    #speed svg:last-of-type {
        display: none;
    }

    #speed .demo {
        inline-size: auto;
        block-size: 100px;
        grid-template-columns: 1fr min-content;
        grid-template-rows: 1fr;
        direction: rtl;
        gap: 16px;
    }

    :is(#standard, #deceleration, #acceleration, #sharp, #linear) .demo {
        block-size: 80px;
        padding-inline-end: 24px;
    }

    #speed .demo span {
        writing-mode: vertical-rl;
    }

    #speed .surface {
        translate: calc(-130px + 16px);
    }

    #deceleration .surface {
        translate: calc(-50cqi - 56px);
    }

    @keyframes easingDemoDisappear {
        100% {
            translate: calc(50cqi + 36px);
        }
    }

    @keyframes easingDemoMoveUp {
        100% {
            translate: calc(130px - 16px);
        }
    }

    @keyframes easingDemoMoveDown {
        100% {
            translate: calc(-130px + 16px);
        }
    }
}

@media (width < 392px) {
    main:has(>.toolbar[variant~="prominent"]) {
        grid-template-rows: calc(3 * var(--increment));
    }
}

/*------------------------------------*\
  主题
\*------------------------------------*/
:root {
    --primary-color: var(--purple-600);
    --secondary-color: var(--green-a200);
}

::selection {
    color: rgb(0 0 0 / 0.87);
    background-color: var(--secondary-color);
}

main>.toolbar {
    --surface-shade-color: rgb(26 35 126 / 0.2);
}

footer a:first-of-type {
    --primary-color: var(--cyan-500);
}

@media (prefers-color-scheme: dark) {

    body>aside,
    header,
    article {
        --primary-color: var(--purple-200);
    }
}