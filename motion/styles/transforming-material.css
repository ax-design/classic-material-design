/*------------------------------------*\
  正文
\*------------------------------------*/

:is(#asymmetric-transformation, #symmetrical-transformation, #join-divide) {
    grid-column-end: span min(var(--content-columns), 2);
}

#radial-dont {
    grid-column-start: max(1, calc(var(--content-columns) - 1));
}

:is(#asymmetric-transformation, #symmetrical-transformation, #join-divide) .diagram {
    block-size: 480px;
}

#asymmetric-transformation .surface {
    position: relative;
    inline-size: calc(120px + 180px * cos(var(--θ)));
    block-size: calc(120px + 180px * (sin(var(--θ)) + 1));
    background-color: var(--high-emphasis-surface-color);
    border-radius: 2px;
    box-shadow: var(--shadow-z2);
}

#asymmetric-transformation [play=on] {
    animation-duration: 2.5s;
}

#asymmetric-transformation [play=on] .surface {
    animation-name: toFinalDegree, toStartDegree;
    animation-duration: 500ms, 450ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toFinalDegree {
    100% {
        --θ: 0deg;
    }
}

@keyframes toStartDegree {
    100% {
        --θ: -90deg;
    }
}

#symmetrical-transformation .surface {
    position: relative;
    inline-size: 120px;
    aspect-ratio: 1 / 1;
    background-color: var(--high-emphasis-surface-color);
    border-radius: 2px;
    box-shadow: var(--shadow-z2);
}

#symmetrical-transformation [play=on] {
    animation-duration: 2.5s;
}

#symmetrical-transformation [play=on] .surface {
    animation-name: toAsyEndSize, toAsyStartSize;
    animation-duration: 400ms, 350ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toAsyEndSize {
    100% {
        inline-size: 300px;
    }
}

@keyframes toAsyStartSize {
    100% {
        inline-size: 120px;
    }
}

#radial-transformation .diagram {
    aspect-ratio: 1 / 1;
    align-items: stretch;
}

#radial-transformation .diagram svg {
    z-index: -1;
    inset: 0;
    position: absolute;
    color: var(--blue-500);
}

#radial-transformation .diagram svg path {
    stroke-dasharray: 1 1;
    stroke-dashoffset: 1;
}

#radial-transformation .wrapper {
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    filter: var(--drop-shadow-z2);
}

#radial-transformation .container {
    position: relative;
    inline-size: 280px;
    aspect-ratio: 1 / 1;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 2px;
    outline-width: 2px;
    outline-style: solid;
    outline-color: transparent;
    overflow: clip;
    offset-anchor: top left;
    offset-rotate: 0deg;
}

#radial-expand .container {
    translate: 0% 40%;
}

#radial-arc .container {
    offset-path: path("M 92 92 A 92 92 0 0 1 0 0");
}

:is(#radial-expand, #radial-arc, #radial-fixed) .surface {
    position: absolute;
    inline-size: 56px;
    aspect-ratio: 1 / 1;
    background-color: var(--high-emphasis-surface-color);
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 50%;
    outline-width: 2px;
    outline-style: solid;
    outline-color: transparent;
}

#radial-fixed .surface {
    translate: 92px 92px;
}

:is(#radial-expand, #radial-arc, #radial-fixed) .surface::before {
    content: "";
    inline-size: 4px;
    aspect-ratio: 1 / 1;
    outline-width: 2px;
    outline-style: solid;
    outline-color: var(--blue-500);
    border-radius: 50%;
    opacity: 0;
}

#radial-transformation [play=on] {
    animation-duration: 6s;
}

:is(#radial-expand, #radial-arc, #radial-fixed) [play=on] .wrapper {
    animation-name: toWrapperFrame, toWrapper;
    animation-duration: 200ms;
    animation-delay: 2.5s, 5.75s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

@keyframes toWrapperFrame {
    100% {
        filter: none;
    }
}

@keyframes toWrapper {
    100% {
        filter: var(--drop-shadow-z2);
    }
}

#radial-expand [play=on] .container {
    animation-name: toMoveClear, toStartPosition, toContainerDoFrame, toMoveClear, toStartPosition, toContainer;
    animation-duration: 400ms, 350ms, 200ms, 1s, 1s, 200ms;
    animation-delay: 0.5s, 2s, 2.5s, 3s, 4.5s, 5.75s;
    animation-timing-function: var(--standard-curve), var(--standard-curve), linear, var(--standard-curve), var(--standard-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes toStartPosition {
    100% {
        translate: 0% 40%;
    }
}

@keyframes toContainerDoFrame {
    0% {
        overflow: visible;
    }

    100% {
        overflow: visible;
        outline-color: var(--blue-500);
    }
}

@keyframes toContainer {
    100% {
        outline-color: transparent;
    }
}

:is(#radial-expand, #radial-arc, #radial-fixed) [play=on] .surface {
    animation-name: toEndRadius, toStartRadius, toSurfaceDoFrame, toEndRadius, toStartRadius, toSurface;
    animation-duration: 400ms, 350ms, 200ms, 1s, 1s, 200ms;
    animation-delay: 0.5s, 2s, 2.5s, 3s, 4.5s, 5.75s;
    animation-timing-function: var(--standard-curve), var(--standard-curve), linear, var(--standard-curve), var(--standard-curve), linear;
    animation-fill-mode: forwards;
}

:is(#radial-expand, #radial-arc) [play=on] .surface {
    animation-name: toEndRadius, toStartRadius, toSurfaceDoFrame, toEndRadius, toStartRadius, toSurface;
}

#radial-fixed [play=on] .surface {
    animation-name: toEndExtraRadius, toStartRadius, toSurfaceDoFrame, toEndExtraRadius, toStartRadius, toSurface;
}

@keyframes toEndRadius {
    100% {
        inline-size: 395.9797974644666px;
    }
}

@keyframes toEndExtraRadius {
    100% {
        inline-size: 656.195092941116px;
    }
}

@keyframes toStartRadius {
    100% {
        inline-size: 56px;
    }
}

@keyframes toSurfaceDoFrame {
    100% {
        background-color: rgb(33 150 243 / 0.12);
        outline-color: var(--blue-500);
    }
}

@keyframes toSurface {
    100% {
        background-color: var(--high-emphasis-surface-color);
        outline-color: transparent;
    }
}

:is(#radial-expand, #radial-arc, #radial-fixed) [play="on"] .surface::before {
    animation-name: toOpaque, toTransparent;
    animation-duration: 200ms;
    animation-delay: 2.5s, 5.75s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#radial-dont .surface {
    position: absolute;
    inline-size: 88px;
    aspect-ratio: 1 / 1;
    background-color: var(--high-emphasis-surface-color);
    border-radius: 2px;
}

#radial-dont .surface:last-of-type {
    position: absolute;
    inline-size: 88px;
    aspect-ratio: 1 / 1;
    background-color: var(--high-emphasis-surface-color);
    border-radius: 50%;
}

#radial-dont [play=on] {
    animation-duration: 3s;
}

#radial-dont [play=on] .surface:last-of-type {
    animation-name: toEndRadius, toDontStartRadius;
    animation-duration: 400ms, 350ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toDontStartRadius {
    100% {
        inline-size: 88px;
    }
}

#radial-oval .container {
    translate: 0% 40%;
}

#radial-oval .surface {
    position: absolute;
    inline-size: calc(56px + 339.9797974644666px * cos(var(--θ)));
    block-size: calc(56px + 339.9797974644666px * (sin(var(--θ)) + 1));
    background-color: var(--high-emphasis-surface-color);
    border-radius: 50%;
}

#radial-oval [play=on] {
    animation-duration: 3s;
}

#radial-oval [play=on] .container {
    animation-name: toMoveClear, toStartPosition;
    animation-duration: 400ms, 350ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#radial-oval [play=on] .surface {
    animation-name: toFinalDegree, toStartDegree;
    animation-duration: 500ms, 450ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

#complex-shapes .surface {
    --inner-radius: calc(12 * sin(23 / 360 * 360deg) / sin((180 - (23 + 180 / 5)) / 360 * 360deg));
    --length-A1: calc(12 / 24 * 100%);
    --length-A2: calc((12.5 - 12) / 24 * 100%);
    --length-B1: calc((12 + var(--inner-radius) * sin(180deg / 5)) / 24 * 100%);
    --length-B2: calc((12.5 - var(--inner-radius) * cos(180deg / 5)) / 24 * 100%);
    --length-C1: calc((12 + 12 * sin(360deg / 5)) / 24 * 100%);
    --length-C2: calc((12.5 - 12 * cos(360deg / 5)) / 24 * 100%);
    --length-D1: calc((12 + var(--inner-radius) * sin(360deg / 5)) / 24 * 100%);
    --length-D2: calc((12.5 + var(--inner-radius) * cos(360deg / 5)) / 24 * 100%);
    --length-E1: calc((12 + 12 * sin(180deg / 5)) / 24 * 100%);
    --length-E2: calc((12.5 + 12 * cos(180deg / 5)) / 24 * 100%);
    --length-F1: calc(12 / 24 * 100%);
    --length-F2: calc((12.5 + var(--inner-radius)) / 24 * 100%);
    --length-G1: calc((12 - 12 * sin(180deg / 5)) / 24 * 100%);
    --length-G2: calc((12.5 + 12 * cos(180deg / 5)) / 24 * 100%);
    --length-H1: calc((12 - var(--inner-radius) * sin(360deg / 5)) / 24 * 100%);
    --length-H2: calc((12.5 + var(--inner-radius) * cos(360deg / 5)) / 24 * 100%);
    --length-I1: calc((12 - 12 * sin(360deg / 5)) / 24 * 100%);
    --length-I2: calc((12.5 - 12 * cos(360deg / 5)) / 24 * 100%);
    --length-J1: calc((12 - var(--inner-radius) * sin(180deg / 5)) / 24 * 100%);
    --length-J2: calc((12.5 - var(--inner-radius) * cos(180deg / 5)) / 24 * 100%);
    inline-size: 88px;
    aspect-ratio: 1 / 1;
    background-color: var(--high-emphasis-surface-color);
    font-size: calc(var(--inner-radius) * 1px);
    clip-path: polygon(var(--length-A1) var(--length-A2),
            var(--length-B1) var(--length-B2),
            var(--length-C1) var(--length-C2),
            var(--length-D1) var(--length-D2),
            var(--length-E1) var(--length-E2),
            var(--length-F1) var(--length-F2),
            var(--length-G1) var(--length-G2),
            var(--length-H1) var(--length-H2),
            var(--length-I1) var(--length-I2),
            var(--length-J1) var(--length-J2));
}

#complex-shapes [play=on] {
    animation-duration: 3s;
}

#complex-shapes [play=on] .surface:last-of-type {
    animation-name: toEndScale, toStartScale;
    animation-duration: 400ms, 350ms;
    animation-delay: 0.5s, 2s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toEndScale {
    100% {
        inline-size: 100%;
        clip-path: polygon(50% 0%, 100% 0, 100% calc(100% / 3), 100% calc(100% * 2 / 3), 100% 100%, 50% 100%, 0 100%, 0 calc(100% * 2 / 3), 0 calc(100% / 3), 0 0);
    }
}

@keyframes toStartScale {
    100% {
        inline-size: 88px;
        clip-path: polygon(var(--length-A1) var(--length-A2),
                var(--length-B1) var(--length-B2),
                var(--length-C1) var(--length-C2),
                var(--length-D1) var(--length-D2),
                var(--length-E1) var(--length-E2),
                var(--length-F1) var(--length-F2),
                var(--length-G1) var(--length-G2),
                var(--length-H1) var(--length-H2),
                var(--length-I1) var(--length-I2),
                var(--length-J1) var(--length-J2));
    }
}

#radial-arc [play=on] .container {
    animation-name: toFinalOffsetDistance, toStartOffsetDistance, toContainerDoFrame, toFinalOffsetDistance, toStartOffsetDistance, toContainer;
    animation-duration: 400ms, 350ms, 200ms, 1s, 1s, 200ms;
    animation-delay: 0.5s, 2s, 2.5s, 3s, 4.5s, 5.75s;
    animation-timing-function: var(--standard-curve), var(--standard-curve), linear, var(--standard-curve), var(--standard-curve), linear;
    animation-fill-mode: forwards;
}

@keyframes toFinalOffsetDistance {
    100% {
        offset-distance: 100%;
    }
}

@keyframes toStartOffsetDistance {
    100% {
        offset-distance: 0%;
    }
}

#radial-arc [play="on"] path {
    animation-name: toCurveExpand, toCurveCollapse;
    animation-duration: 1s;
    animation-delay: 3s, 4.5s;
    animation-timing-function: var(--standard-curve);
    animation-fill-mode: forwards;
}

@keyframes toCurveExpand {
    100% {
        stroke-dashoffset: 0;
    }
}

@keyframes toCurveCollapse {
    100% {
        stroke-dashoffset: 1;
    }
}

#radial-fixed [play=on] .container {
    animation-name: toContainerDoFrame, toContainer;
    animation-duration: 200ms;
    animation-delay: 2.5s, 5.75s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#join-divide .wrapper {
    filter: var(--drop-shadow-z2);
    will-change: filter;
}

#join-divide .surface {
    inline-size: 276px;
    block-size: 72px;
    background-color: var(--high-emphasis-surface-color);
    margin: 16px;
    border-radius: 2px;
    outline-width: 1px;
    outline-style: solid;
    outline-color: transparent;
    will-change: outline-color, background-color;
}

#join-divide [play=on] {
    animation-duration: 7s;
}

#join-divide [play=on] .wrapper {
    animation-name: toWrapperFrame, toWrapper;
    animation-duration: 200ms;
    animation-delay: 2.5s, 6.75s;
    animation-timing-function: linear;
    animation-fill-mode: forwards;
}

#join-divide [play="on"] .surface {
    animation-duration: 400ms, 400ms, 200ms, 1s, 1s, 200ms;
    animation-delay: 0.5s, 1.75s, 2.5s, 3.25s, 5.25s, 6.75s;
    animation-timing-function: var(--standard-curve), var(--standard-curve), linear, var(--standard-curve), var(--standard-curve), linear;
    animation-fill-mode: forwards;
}

#join-divide [play="on"] .surface:nth-of-type(1) {
    animation-name: toJoin1, toMoveClear, toSurfaceDoFrame, toJoin1, toMoveClear, toSurface;
}

#join-divide [play="on"] .surface:nth-of-type(2) {
    animation-name: toJoin2, toMoveClear, toSurfaceDoFrame, toJoin2, toMoveClear, toSurface;
}

#join-divide [play="on"] .surface:nth-of-type(3) {
    animation-name: toJoin3, toMoveClear, toSurfaceDoFrame, toJoin3, toMoveClear, toSurface;
}

#join-divide [play="on"] .surface:nth-of-type(4) {
    animation-name: toJoin4, toMoveClear, toSurfaceDoFrame, toJoin4, toMoveClear, toSurface;
}

@keyframes toJoin1 {
    100% {
        translate: 0px 30px;
    }
}

@keyframes toJoin2 {
    100% {
        translate: 0px 10px;
    }
}

@keyframes toJoin3 {
    100% {
        translate: 0px -10px;
    }
}

@keyframes toJoin4 {
    100% {
        translate: 0px -30px;
    }
}

/*------------------------------------*\
  主题
\*------------------------------------*/

:root {
    --primary-color: var(--purple-600);
    --secondary-color: var(--green-a200);
}

::selection {
    color: rgb(0 0 0 / 0.87);
    background-color: var(--secondary-color);
}

main>.toolbar {
    --surface-shade-color: rgb(26 35 126 / 0.2);
}

@media (prefers-color-scheme: dark) {

    body>aside,
    header,
    article {
        --primary-color: var(--purple-200);
    }
}